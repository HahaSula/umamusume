{"version":3,"sources":["component/relation/relation.jsx","component/compatibility/compatibility.jsx","App.jsx","index.jsx"],"names":["Relation","calculateRelation","id1","id2","relations","_","intersection","relationMember","reduce","sum","id","parseInt","relation","idToPortrait","className","src","process","alt","characterJson","text","characterIds","Object","keys","i","length","j","map","targetId","createRow","Compatibility","useState","entries","horses","horse","setUma","FormControl","InputLabel","Select","labelId","value","onChange","event","target","name","targetHorse","index","MenuItem","rel","forEach","horseOther","push","sortBy","relationArray","App","to","exact","path","component","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.fef6791e.chunk.js","sourcesContent":["import _ from 'lodash';\nimport React from 'react';\nimport 'react-tabs/style/react-tabs.css';\n\nimport characterJson from '../../db/character.json';\nimport relation from '../../db/relation.json';\nimport relationMember from '../../db/relation_member.json';\n\nfunction Relation() {\n  function calculateRelation(id1, id2) {\n    if (id1 === id2) {\n      return 0;\n    }\n    const relations = _.intersection(relationMember[id1], relationMember[id2]);\n    return _.reduce(relations, (sum, id) => sum + parseInt(relation[id], 10), 0);\n  }\n\n  function idToPortrait(id) {\n    return (\n      <img\n        className=\"portrait\"\n        src={`${process.env.PUBLIC_URL}/static/image/character/portrait/${id}.png`}\n        alt={characterJson[id].text}\n      />\n    );\n  }\n\n  function createRow(id) {\n    return (\n      <tr>\n        <th>{idToPortrait(id)}</th>\n        { _.map(characterIds, (targetId) => <th>{ calculateRelation(id, targetId) }</th>) }\n      </tr>\n    );\n  }\n\n  const characterIds = Object.keys(characterJson);\n  const relations = {};\n  for (let i = 0; i < characterIds.length; i += 1) {\n    relations[characterIds[i]] = {};\n    for (let j = 0; j < characterIds.length; j += 1) {\n      relations[characterIds[i]][characterIds[j]] = calculateRelation(characterIds[i], characterIds[j]);\n    }\n  }\n\n  return (\n    <table>\n      <tbody>\n        <tr>\n          <th />\n          { _.map(characterIds, (id) => <th>{idToPortrait(id)}</th>) }\n        </tr>\n        { _.map(characterIds, (id) => createRow(id)) }\n      </tbody>\n    </table>\n  );\n}\n\nexport default Relation;\n","import _ from 'lodash';\nimport InputLabel from '@material-ui/core/InputLabel';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport FormControl from '@material-ui/core/FormControl';\nimport Select from '@material-ui/core/Select';\nimport React, { useState } from 'react';\n\nimport characterJson from '../../db/character.json';\nimport relation from '../../db/relation.json';\nimport relationMember from '../../db/relation_member.json';\n\nfunction Compatibility() {\n  function calculateRelation(id1, id2) {\n    if (id1 === id2) {\n      return 0;\n    }\n    const relations = _.intersection(relationMember[id1], relationMember[id2]);\n    return _.reduce(relations, (sum, id) => sum + parseInt(relation[id], 10), 0);\n  }\n\n  const [horses] = useState(Object.entries(characterJson));\n  const [horse, setUma] = useState({});\n\n  const handleChange = (event) => {\n    const { value } = event.target;\n\n    setUma({\n      id: value[0],\n      name: value[1].text,\n    });\n  };\n\n  const relationArray = () => {\n    let rel = [];\n    horses.forEach((horseOther) => {\n      if (horseOther[0] !== horse.id) {\n        rel.push([\n          horseOther[1].text,\n          calculateRelation(horse.id, horseOther[0]),\n          `${process.env.PUBLIC_URL}/static/image/character/portrait/${horseOther[0]}.png`,\n        ]);\n      }\n    });\n    rel = _.sortBy(rel, [(value) => -value[1]]);\n\n    return rel.map((value, index) => (\n      <tr key={index[1]}>\n        <td>{value[0]}</td>\n        <td>{value[1]}</td>\n        <td><img className=\"portrait\" src={value[2]} alt={value[1]} /></td>\n      </tr>\n    ));\n  };\n\n  return (\n    <div>\n      <div className=\"dropdown\">\n        <FormControl>\n          <InputLabel id=\"demo-simple-select-label\">ウマ</InputLabel>\n          <Select\n            labelId=\"demo-simple-select-label\"\n            id=\"demo-simple-select\"\n            value={horse[1]}\n            onChange={handleChange}\n          >\n            { horses.map((targetHorse, index) => (\n              <MenuItem key={`${index[1]}_option`} value={targetHorse}>{targetHorse[1].text}</MenuItem>\n            ))}\n          </Select>\n        </FormControl>\n      </div>\n      <table>\n        {relationArray()}\n      </table>\n    </div>\n  );\n}\n\nexport default Compatibility;\n","import React from 'react';\nimport {\n  Redirect, HashRouter as Router, Route, Link, Switch,\n} from 'react-router-dom';\n\nimport 'react-tabs/style/react-tabs.css';\nimport './App.css';\n\nimport Relation from './component/relation/relation';\nimport Compatibility from './component/compatibility/compatibility';\n\nfunction App() {\n  return (\n    <Router>\n      <div className=\"App\">\n        <div className=\"links\">\n          <Link to=\"/relation\" className=\"link\">Relation</Link>\n          <Link to=\"/compatibility\" className=\"link\">Compatibility</Link>\n        </div>\n        <div className=\"tabs\">\n          <Switch>\n            <Route exact path=\"/\">\n              <Redirect to=\"/relation\" />\n            </Route>\n            <Route path=\"/relation\" component={Relation} />\n            <Route path=\"/compatibility\" component={Compatibility} />\n          </Switch>\n        </div>\n      </div>\n    </Router>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}