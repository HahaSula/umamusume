{"version":3,"sources":["localization/ja_jp sync /.json$","localization/en_us sync /.json$","localization/zh_tw sync /.json$","library/common.ts","component/relation/graph.tsx","component/relation/query.tsx","component/relation/queryP.tsx","component/course-data.tsx","component/simulator/horse-proper-rate.tsx","component/simulator/horse-stat-data.tsx","library/race/common.ts","component/simulator/horse-data.tsx","component/simulator/race-data.tsx","library/race/constant.ts","library/race/race-horse.ts","component/simulator/race-result.tsx","library/race/horse.ts","library/race/course.ts","library/race/skill.ts","component/simulator/simulator-calculator.tsx","component/simulator/skill-selector.tsx","component/simulator/simulator.tsx","component/course/course-chart.tsx","component/course/course.tsx","localization.ts","app.tsx","index.tsx"],"names":["map","webpackContext","req","id","webpackContextResolve","__webpack_require__","o","e","Error","code","keys","Object","resolve","module","exports","RunningStyle","DistanceType","GroundType","TurnType","InoutType","CoursePhase","GroundStatus","ProperRate","SkillAbilityType","SkillAbilityTargetType","SkillConditionOperatorsLogical","SkillConditionOperatorsFormula","characters","characterJson","relations","relationJson","relationMembers","relationMemberJson","RelationGraph","props","characterIds","i","length","j","calculateRelation","this","idToPortrait","_","targetId","localization","className","src","process","alt","character","name","createRow","id1","id2","targetRelations","intersection","reduce","sum","parseInt","Component","RelationQuery","horses","selectHorse","event","value","target","setState","horseId","selectHorse2","horseId2","selectP1","P1","selectP2","P2","selectGp1","Gp1","selectGp2","Gp2","selectGp3","Gp3","selectGp4","Gp4","state","horseId2Img","inputId","rel","rel3","forEach","targetHorseId","relation1","rel2","parentHorseId","push","relation","calculateGrandRelation","sortBy","horseRela","id3","image1","image2","relation2","image3","relation3","relationTotal","horseGreatRow","father","mother","Horseallrela","slice","rowSpan","width","inputId2","image","horseRow","onClick","selfrelation","calculatePairRelation","colSpan","Select","labelId","onChange","MenuItem","relationArray","buildRelationArray","grandArray","buildGrandArray","buildBestArray","sideRelationArray","bestRelation","selfRelation","buildSelfRalation","FormControl","InputLabel","style","float","marginRight","undefined","p1","p2","gp1","gp2","gp3","gp4","ReverseQuery","selectTargetOne","State","targetOne","selectTargetTwo","targetTwo","selectTargetThree","targetThree","selectTargetOneMin","targetOneMin","selectTargetTwoMin","targetTwoMin","selectTargetThreeMin","targetThreeMin","selectParentOne","parentOne","selectParentTwo","parentTwo","selectGrandParentOne","grandParentOne","selectGrandParentTwo","grandParentTwo","selectGrandParentThree","grandParentThree","selectGrandParentFour","grandParentFour","hourseList","concat","parentList","gFatherList","gMotherList","parentArray","parent","grandFather","grandMother","calculateGrandSRelation","IsSkyline","index","tagetOneRelation","tagetTwoRelation","tagetThreeRelation","index2","splice","input","p1List","p2List","gp1List","gp2List","gp3List","gp4List","grandparentTwo","t0","performance","now","t1","makeHourseList","JSON","stringify","console","log","Father","Mother","buildParentArray","cal","relaone","relatwo","relathree","targetOneRela","targetTwoRela","targetThreeRela","tagetOneImage","tagetTwoImage","tagetThreeImage","p1Img","p2Img","gp1Img","gp2Img","gp3Img","gp4Img","selectParentList","relatoinArray","filter","hourseCompare","bestTable","buildBestTable","color","defaultValue","gutter","min","max","Common","time","hour","Math","floor","hourString","minute","minuteString","toString","padStart","second","secondString","minorString","Option","CourseData","setData","racecourse","span","site","Racecourse","course","key","courseCategories","ground","Ground","distance","Distance","racecourseComponent","getRacecourseComponent","groundComponent","getGroundComponent","distanceComponent","getDistanceComponent","HorseProperRate","properRateTypes","properTypes","properName","properRateType","camelProperRateType","camelCase","properRate","G","F","E","D","C","B","A","S","HorseStatData","stats","data","speed","stamina","pow","guts","wiz","ResultFlag","Season","Weather","HorseData","RaceData","strategy","Strategy","Nige","RunningStyleNige","Senko","RunningStyleSenko","Sashi","RunningStyleSashi","Oikomi","RunningStyleOikomi","groundStatus","Good","GroundStatusGood","SlightlyHeavy","GroundStatusSlightlyHeavy","Heavy","GroundStatusHeavy","Bad","GroundStatusBad","strategyComponent","getStrategyComponent","groundStatusComponent","getGroundStatusComponent","constant","baseDistance","minSpeed","minSpeedRate","minSpeedGutsCoefSqrt","minSpeedGutsCoef","startDash","targetSpeedCoefficient","startAccelAdd","targetSpeed","baseTargetSpeedRandomMinusVal1","baseTargetSpeedRandomMinusVal2","baseTargetSpeedRandomPlusVal1","baseTargetSpeedRandomLogCoefficient","baseTargetSpeedRandomCoefficient","Start","Middle","End","LastSpurt","phaseEndBaseTargetSpeedCoef","addSpeedParamCoef","baseTargetSpeedCoef","lastSpurtBaseTargetSpeedAddCoef","lastSpurtTargetSpeedCoefSqrt","upSlopeAddSpeedVal1","downSlopeAddSpeedVal1","downSlopeAddSpeedVal2","firstBlockSlowStyles","lastSpurtTargetSpeedStep","accel","accelPhaseCoef","accelPowCoef","accelPowCoefUpSlope","accelPowCoefSqrt","accelDecreaseCoef","accelDecreaseZeroHpCoef","hp","hpInitialVal1","hpMaxCoef","hpDecBase","hpDecRateBaseNormal","hpDecRateBaseTemptation","hpDecRateBasePositionKeepPaseDown","hpDecRateMultiplyDownSlopeAccelMode","speedGapParam1","speedGapParam1Pow","groundModifierMultiHpSub","Turf","Dirt","hpGutsBase","hpGutsCoef","hpGutsCoefSqrt","distanceTargetSpeedCoefficient","blockPortion","distanceShort","distanceMile","distanceMiddle","distanceLong","Number","MAX_VALUE","startSpeed","phaseStart","phaseMiddle","phaseEnd","positionSense","frameTime","gateTimeRange","finishTimeCoef","lastSpurt","determineRateBase","determineRateWizMultiplier","targetDistanceFromGoal","slope","downSlopeAccelModeChanceBase","downSlopeEndChance","skill","activatePerMin","lotActivatePerVal1","lotActivatePerVal2","abilityTimeDivideDistance","coolDownTimeDivideDistance","BreakPoint","Mode","RaceResult","raceResults","timeAverage","meanBy","timeShown","parseFloat","finish_time_min","secondToTime","TimeMin","timeDeviationSum","fullLastSpurtCount","hpLeftSum","result","resultFlags","has","FullLastSpurt","hpLeft","TimeAverage","TimeStandardDeviation","TimeShown","FullLastSpurtRate","HpLeftAverage","toFixed","sqrt","toLocaleString","Horse","stat","skills","Course","courseData","_courseData","getDistanceType","turn","slope_per","race_track_id","Short","Mile","Long","Skill","condition","raceHorse","realCondition","operator","andCondition","items","childCondition","matchBase","orCondition","formulaCondition","targetValue","getTargetValue","GreaterThan","GreaterThanOrEqualTo","LessThan","LessThanOrEqualTo","EqualTo","NotEqualTo","turnType","trackId","season","weather","postNumber","sameRunningStyleCount","popularityFirstRunningStyle","runningStyle","popularity","random","distanceProperRate","distanceProperRateJson","groundProperRate","groundProperRateJson","RaceHorse","horse","sameRunningStyle","_course","_horse","_runningStyle","_season","_weather","_postNumber","_popularity","_sameRunningStyleCount","_popularityFirstRunningStyle","_statAddition","_stat","_generalSkills","_activateCountSkills","_skillCooldown","_speedWizRandomRange","_speedWizRandom","_phase","_mode","Set","_speed","_lastSpurtTargetSpeed","_hp","_distance","_time","_breakPoints","_startDashTargetSpeed","_slopePer","raceResult","finishFirstBlock","delete","FirstBlock","FinishPhaseStart","phaseStartDistance","finishBlock","refreshSpeedRandomValue","FinishBlock","blockDistance","finishPhaseStart","FinishPhaseMiddle","phaseMiddleDistance","calculateLastSpurt","add","maxLastSpurtTargetSpeed","calculateAccelAndRun","hpCost","finalSpeed","lastSpurtDistance","lastSpurtTargetSpeed","lastSpurtSpeedCandidates","phaseEndBaseTargetSpeed","baseTargetSpeed","phaseEndTargetSpeedAddition","maxDistance","hpDecreaseRate","accelToTargetSpeed","currentSpeed","phaseEndAccelTime","phaseEndAccelDistance","phaseEndAccelHpCost","phaseEndFinalSpeed","lastSpurtAccelTime","lastSpurtAccelDistance","lastSpurtAccelHpCost","runDistance","phaseEndRunTime","phaseEndRunHpCost","getRunHpDecrease","lastSpurtRunTime","lastSpurtRunHpCost","hpDiff","candidate","randomByCandidates","lastSpurtDetermineRate","finishPhaseMiddle","FinishPhaseEnd","phaseEndDistance","finishPhaseEnd","FinishPhaseLastSpurt","doLastSpurt","finishLastSpurt","triggerPositionSense","zeroHp","ZeroHp","changeSlope","slopePer","checkDownSlopeAccelMode","DownSlopeAccel","DownSlopeAccelMode","triggerSkill","reachGoal","breakPointMap","None","FinishFirstBlock","PositionSense","Slope","TriggerSkill","Goal","clone","skillsActivated","temptation","triggered","originalStat","distanceType","StartDash","startDashTargetSpeed","slopeAdd","abs","baseTargetSpeedRandom","realTargetSpeed","groundType","power","baseAccel","UpSlope","Temptation","PositionKeepPaceDown","phaseEndHpDecreaseRate","modeHpDecreaseRate","minParameters","minKey","minDistance","entries","Array","isArray","parameters","breakPoint","accelTime","accelDistance","accelHpCost","runTime","speedCoefficient","realAccelTime","nr","realAccelDistance","speedHpDecreaseRate","getSpeedHpDecrease","runHpCost","realRunTime","realRunDistance","effect","targets","target_type","Self","ability_type","AddSpeed","AddStamina","AddPow","AddGuts","AddWiz","AddSight","AddHp","ExtendTemptation","AddTargetSpeed","AddLaneAccel","AddAccel","skillId","ability","count","cooldown_time","effects","applyEffect","slopePers","allSlopePers","addBreakPoint","type","pop","distances","specific","skillActivateRate","generalTriggerDistances","specificTriggerDistances","abilities","ability_time","activateAbility","getSkillTriggerStat","maxHp","populateSkills","upperBound","log10","lowerBound","buildSlopeBreakPoints","doGateOpen","debugOutput","finishStartDash","minBreakpoint","doAccelAndRun","removeBreakPoint","initialSpeed","targetSpeedByDistanceSquare","getAccelHpDecrease","determineRate","randomNumber","skillData","skillJson","SimulatorCalculator","calculate","a","running","finished","groundTypeTurf","groundTypeDirt","distanceTypeShort","distanceTypeMile","distanceTypeMiddle","distanceTypeLong","runningStyleNige","runningStyleSenko","runningStyleSashi","runningStyleOikomi","rounds","targetCourse","targetHorse","counter","started","worksPerThread","ceil","concurrency","Promise","Spring","Sunny","simulate","delay","progressPercent","round","SimulatorCalculateRounds","disabled","SimulatorCalculate","percent","SKILL_SELECTOR_HIERARCHY","categoryName","sets","children","icon","TreeNode","TreeSelect","SkillSelector","_skillSets","icon_id","rarity","definitions","definition","title","buildSkillTreeNodes","chain","set","skillSet","flatten","dropdownPopupAlign","overflow","adjustY","adjustX","offset","treeLine","allowClear","multiple","autoClearSearchValue","showCheckedStrategy","SHOW_PARENT","courses","courseJson","Simulator","updateCourse","loadCourseData","inout","CORNER_COLOR","Default","stroke","strokeOpacity","fill","fillOpacity","1","2","3","4","STRAIGHT_COLOR","CourseChart","_referenceAreas","_referenceDots","maxSlope","minSlope","param","corner","corner_index","includes","indexOf","end","start","ReferenceDot","x","y","label","Label","position","ReferenceArea","x1","x2","y1","y2","straight","CourseStraight","buildData","buildCorner","buildStraight","ComposedChart","height","XAxis","dataKey","YAxis","domain","Tooltip","Legend","Line","dot","CourseSlope","ReferenceLine","CourseMiddlePhase","CoursePositionKeepEnd","CourseEndPhase","slopeDistance","lastSlopePer","lastSlopePerDistance","Localization","default","localizer","getLocalizationJaJp","getLocalizationEnUs","getLocalizationZhTw","getLocalization","locale","files","fileJson","fileKey","structure","split","merge","require","Header","Layout","Content","Footer","App","changeLocalization","theme","mode","defaultSelectedKeys","Item","to","exact","path","render","padding","href","ReactDOM","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.62da08ec.chunk.js","sourcesContent":["var map = {\n\t\"./character/name.json\": 456,\n\t\"./course/ground.json\": 457,\n\t\"./course/inout.json\": 458,\n\t\"./course/racecourse.json\": 459,\n\t\"./site.json\": 460\n};\n\n\nfunction webpackContext(req) {\n\tvar id = webpackContextResolve(req);\n\treturn __webpack_require__(id);\n}\nfunction webpackContextResolve(req) {\n\tif(!__webpack_require__.o(map, req)) {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t}\n\treturn map[req];\n}\nwebpackContext.keys = function webpackContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackContext.resolve = webpackContextResolve;\nmodule.exports = webpackContext;\nwebpackContext.id = 455;","var map = {\n\t\"./character/name.json\": 462,\n\t\"./course/racecourse.json\": 463,\n\t\"./site.json\": 464\n};\n\n\nfunction webpackContext(req) {\n\tvar id = webpackContextResolve(req);\n\treturn __webpack_require__(id);\n}\nfunction webpackContextResolve(req) {\n\tif(!__webpack_require__.o(map, req)) {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t}\n\treturn map[req];\n}\nwebpackContext.keys = function webpackContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackContext.resolve = webpackContextResolve;\nmodule.exports = webpackContext;\nwebpackContext.id = 461;","var map = {\n\t\"./character/name.json\": 466,\n\t\"./course/racecourse.json\": 467,\n\t\"./site.json\": 468\n};\n\n\nfunction webpackContext(req) {\n\tvar id = webpackContextResolve(req);\n\treturn __webpack_require__(id);\n}\nfunction webpackContextResolve(req) {\n\tif(!__webpack_require__.o(map, req)) {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t}\n\treturn map[req];\n}\nwebpackContext.keys = function webpackContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackContext.resolve = webpackContextResolve;\nmodule.exports = webpackContext;\nwebpackContext.id = 465;","/* eslint-disable @typescript-eslint/no-shadow */\r\nexport interface LocalizationData {\r\n  character: {\r\n    name: LocalizationMap,\r\n  },\r\n  course: {\r\n    racecourse: LocalizationMap,\r\n    ground: LocalizationMap,\r\n    inout: LocalizationMap,\r\n  },\r\n  site: LocalizationMap,\r\n  [key: string]: string | LocalizationSubData,\r\n}\r\n\r\nexport interface LocalizationSubData {\r\n  [key: string]: string | LocalizationSubData,\r\n}\r\n\r\ninterface LocalizationMap {\r\n  [key: string]: string,\r\n}\r\n\r\nexport enum RunningStyle {\r\n  Nige = 'RunningStyleNige',\r\n  Senko = 'RunningStyleSenko',\r\n  Sashi = 'RunningStyleSashi',\r\n  Oikomi = 'RunningStyleOikomi',\r\n}\r\n\r\nexport enum DistanceType {\r\n  Short = 'DistanceTypeShort',\r\n  Mile = 'DistanceTypeMile',\r\n  Middle = 'DistanceTypeMiddle',\r\n  Long = 'DistanceTypeLong',\r\n}\r\n\r\nexport enum GroundType {\r\n  Turf = '1',\r\n  Dirt = '2',\r\n}\r\n\r\nexport enum TurnType {\r\n  Right = '1',\r\n  Left = '2',\r\n  Straight = '4',\r\n}\r\n\r\nexport enum InoutType {\r\n  Normal = '1',\r\n  Inner = '2',\r\n  Outer = '3',\r\n  OuterInner = '4',\r\n}\r\n\r\nexport enum CoursePhase {\r\n  Start = 0,\r\n  Middle = 1,\r\n  End = 2,\r\n  LastSpurt = 3,\r\n}\r\n\r\nexport enum GroundStatus {\r\n  Good = 'GroundStatusGood',\r\n  SlightlyHeavy = 'GroundStatusSlightlyHeavy',\r\n  Heavy = 'GroundStatusHeavy',\r\n  Bad = 'GroundStatusBad',\r\n}\r\n\r\nexport enum ProperRate {\r\n  G = '1',\r\n  F = '2',\r\n  E = '3',\r\n  D = '4',\r\n  C = '5',\r\n  B = '6',\r\n  A = '7',\r\n  S = '8',\r\n}\r\n\r\nexport interface CourseCategory {\r\n  [key: string]: {\r\n    [key: string]: {\r\n      [key: string]: CourseDataType,\r\n    },\r\n  },\r\n}\r\n\r\nexport interface CourseDataType {\r\n  id: string,\r\n  race_track_id: string,\r\n  distance: number,\r\n  ground: GroundType,\r\n  turn: TurnType,\r\n  inout: InoutType,\r\n  course_set_status_id: string,\r\n  finish_time_min: string,\r\n  finish_time_min_random_range: string,\r\n  finish_time_max: string,\r\n  finish_time_max_random_range: string,\r\n  param: {\r\n    corner: { start?: number, end?: number }[],\r\n    straight: { start: number, end: number }[],\r\n    corner_index: number[],\r\n  },\r\n  slope_per: { distance: number, slope_per: number }[],\r\n}\r\n\r\nexport interface SkillData {\r\n  id: string,\r\n  name: string,\r\n  rarity: number,\r\n  description: string,\r\n  icon_id: string,\r\n  need_skill_point: number | null,\r\n  abilities: SkillAbilityData[],\r\n}\r\n\r\nexport interface SkillAbilityData {\r\n  condition_raw: string,\r\n  condition: SkillConditionObject,\r\n  ability_time: number,\r\n  cooldown_time: number,\r\n  effects: SkillEffectData[],\r\n}\r\n\r\nexport interface SkillEffectData {\r\n  ability_type: SkillAbilityType,\r\n  ability_value: number,\r\n  target_type: SkillAbilityTargetType,\r\n  target_value: number,\r\n}\r\n\r\nexport enum SkillAbilityType {\r\n  AddSpeed = '1',\r\n  AddStamina = '2',\r\n  AddPow = '3',\r\n  AddGuts = '4',\r\n  AddWiz = '5',\r\n  AddSight = '8',\r\n  AddHp = '9',\r\n  ExtendTemptation = '13',\r\n  AddTargetSpeed = '27',\r\n  AddLaneAccel = '28',\r\n  AddAccel = '31',\r\n}\r\n\r\nexport enum SkillAbilityTargetType {\r\n  Self = '1',\r\n  FrontInSight = '4',\r\n  FrontAll = '9',\r\n  BehindAll = '10',\r\n  RunningStyle = '18',\r\n  DistanceFront = '19',\r\n  DistanceBehind = '20',\r\n  RunningStyleInTemptation = '21',\r\n}\r\n\r\nenum SkillConditionOperatorsLogical {\r\n  And = 'and',\r\n  Or = 'or',\r\n}\r\n\r\nexport enum SkillConditionOperatorsFormula {\r\n  GreaterThan = '>',\r\n  GreaterThanOrEqualTo = '>=',\r\n  LessThan = '<',\r\n  LessThanOrEqualTo = '<=',\r\n  EqualTo = '==',\r\n  NotEqualTo = '!=',\r\n}\r\n\r\nexport interface SkillConditionObjectLogical {\r\n  operator: SkillConditionOperatorsLogical,\r\n  items: SkillConditionObject[],\r\n}\r\n\r\nexport interface SkillConditionObjectFormula {\r\n  operator: SkillConditionOperatorsFormula,\r\n  key: string,\r\n  value: string,\r\n}\r\n\r\nexport type SkillConditionObject = SkillConditionObjectLogical | SkillConditionObjectFormula | {};\r\n\r\nclass Common {\r\n  static secondToTime(time: number): string {\r\n    const hour = Math.floor(time / 3600);\r\n    const hourString = hour > 0 ? `${hour}:` : '';\r\n    const minute = Math.floor((time - hour * 3600) / 60);\r\n    const minuteString = minute > 0\r\n      ? `${hour > 0 ? `${minute.toString().padStart(2, '0')}` : minute}:`\r\n      : '';\r\n    const second = Math.floor(time - hour * 3600 - minute * 60);\r\n    const secondString = second > 0\r\n      ? `${(hour > 0 || minute > 0) ? `${second.toString().padStart(2, '0')}` : second}`\r\n      : '0';\r\n    const minorString = `.${Math.floor((time - hour * 3600 - minute * 60 - second) * 1000).toString().padStart(3, '0')}`;\r\n    return `${hourString}${minuteString}${secondString}${minorString}`;\r\n  }\r\n}\r\n\r\nexport default Common;\r\n","import _ from 'lodash';\r\nimport React, { Component } from 'react';\r\nimport 'react-tabs/style/react-tabs.css';\r\n\r\nimport '../../app.css';\r\nimport './relation.css';\r\n\r\nimport { LocalizationData } from '../../library/common';\r\nimport characterJson from '../../db/character.json';\r\nimport relationJson from '../../db/relation.json';\r\nimport relationMemberJson from '../../db/relation_member.json';\r\n\r\nconst characters = characterJson as { [key: string]: {} };\r\nconst relations = relationJson as { [key: string]: string };\r\nconst relationMembers = relationMemberJson as { [key: string]: string[] };\r\n\r\ninterface IProps {\r\n  localization: LocalizationData\r\n}\r\n\r\ninterface IState {\r\n}\r\n\r\nclass RelationGraph extends Component<IProps, IState> {\r\n  static calculateRelation(id1: string, id2: string) {\r\n    if (id1 === id2) {\r\n      return 0;\r\n    }\r\n    const targetRelations: string[] = _.intersection(relationMembers[id1], relationMembers[id2]);\r\n    return _.reduce(targetRelations, (sum: number, id: string) => sum + parseInt(relations[id], 10), 0);\r\n  }\r\n\r\n  characterIds: string[];\r\n\r\n  relations: { [key: string]: { [key: string]: number } };\r\n\r\n  constructor(props: IProps) {\r\n    super(props);\r\n    this.characterIds = Object.keys(characters);\r\n    this.relations = {};\r\n    for (let i = 0; i < this.characterIds.length; i += 1) {\r\n      this.relations[this.characterIds[i]] = {};\r\n      for (let j = 0; j < this.characterIds.length; j += 1) {\r\n        this.relations[this.characterIds[i]][this.characterIds[j]] = RelationGraph.calculateRelation(this.characterIds[i], this.characterIds[j]);\r\n      }\r\n    }\r\n  }\r\n\r\n  createRow(id: string) {\r\n    return (\r\n      <tr key={`relation_row_${id}`}>\r\n        <th key={`portrait_row_${id}`}>{this.idToPortrait(id)}</th>\r\n        { _.map(this.characterIds, (targetId) => <th key={`relation_${id}_${targetId}`}>{ RelationGraph.calculateRelation(id, targetId) }</th>) }\r\n      </tr>\r\n    );\r\n  }\r\n\r\n  idToPortrait(id: string) {\r\n    const { localization } = this.props;\r\n    return (\r\n      <img\r\n        className=\"portrait\"\r\n        src={`${process.env.PUBLIC_URL}/static/image/character/portrait/${id}.png`}\r\n        alt={localization.character.name[id]}\r\n      />\r\n    );\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"content\">\r\n        <table>\r\n          <tbody>\r\n            <tr>\r\n              <th />\r\n              { _.map(this.characterIds, (id) => <th key={`portrait_column_${id}`}>{this.idToPortrait(id)}</th>) }\r\n            </tr>\r\n            { _.map(this.characterIds, (id) => this.createRow(id)) }\r\n          </tbody>\r\n        </table>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default RelationGraph;\r\n","import _ from 'lodash';\r\nimport InputLabel from '@material-ui/core/InputLabel';\r\nimport MenuItem from '@material-ui/core/MenuItem';\r\nimport FormControl from '@material-ui/core/FormControl';\r\nimport Select from '@material-ui/core/Select';\r\nimport React, { Component } from 'react';\r\n\r\nimport '../../app.css';\r\nimport './relation.css';\r\n\r\nimport { LocalizationData } from '../../library/common';\r\nimport characterJson from '../../db/character.json';\r\nimport relationJson from '../../db/relation.json';\r\nimport relationMemberJson from '../../db/relation_member.json';\r\n\r\nconst characters = characterJson as { [key: string]: {} };\r\nconst relations = relationJson as { [key: string]: string };\r\nconst relationMembers = relationMemberJson as { [key: string]: string[] };\r\n\r\ninterface HorseRow {\r\n  id: string;\r\n  name: string;\r\n  relation: number;\r\n  image: string;\r\n}\r\ninterface HorseGreatRow {\r\n  id1:string\r\n  image1 : string;\r\n  relation1: number;\r\n  id2:string\r\n  image2 : string;\r\n  relation2: number;\r\n  id3:string\r\n  image3 : string;\r\n  relation3: number;\r\n  relationTotal: number;\r\n}\r\ninterface HorseAllRela{\r\n  father:HorseGreatRow\r\n  mother:HorseGreatRow\r\n  relation:number\r\n}\r\ninterface HorseRela {\r\n  id: string;\r\n  relation: number;\r\n}\r\n\r\ninterface IProps {\r\n  localization: LocalizationData;\r\n}\r\n\r\nconst tableStyle = {\r\n  float: 'left',\r\n};\r\n\r\ninterface IState {\r\n  horseId: string\r\n  horseId2: string\r\n  horseId2Img: string\r\n\r\n  P1: string\r\n  P2: string\r\n  Gp1: string\r\n  Gp2: string\r\n  Gp3: string\r\n  Gp4: string\r\n}\r\n\r\nclass RelationQuery extends Component<IProps, IState> {\r\n  static calculateRelation(id1: string | undefined, id2: string): number {\r\n    if (id1 === id2 || id1 === undefined) {\r\n      return 0;\r\n    }\r\n    const targetRelations: string[] = _.intersection(relationMembers[id1], relationMembers[id2]);\r\n    return _.reduce(targetRelations, (sum: number, id: string) => sum + parseInt(relations[id], 10), 0);\r\n  }\r\n\r\n  static calculateGrandRelation(id1: string | undefined, id2: string, id3: string): number {\r\n    if (id1 === id2 || id1 === undefined || id1 === id3 || id2 === id3) {\r\n      return 0;\r\n    }\r\n    const targetRelations: string[] = _.intersection(relationMembers[id1], relationMembers[id2], relationMembers[id3]);\r\n    return _.reduce(targetRelations, (sum: number, id: string) => sum + parseInt(relations[id], 10), 0);\r\n  }\r\n\r\n  static calculatePairRelation(target: string | undefined, p1: string, p2: string, gp1: string, gp2: string, gp3: string, gp4: string) {\r\n    if (target === undefined || target === p1 || target === p2 || p1 === p2) {\r\n      return 0;\r\n    }\r\n    let relation:number = 0;\r\n    relation += RelationQuery.calculateRelation(target, p1);\r\n    relation += RelationQuery.calculateRelation(target, p2);\r\n    relation += RelationQuery.calculateRelation(p1, p2);\r\n    relation += RelationQuery.calculateGrandRelation(target, p1, gp1);\r\n    relation += RelationQuery.calculateGrandRelation(target, p1, gp2);\r\n    relation += RelationQuery.calculateGrandRelation(target, p2, gp3);\r\n    relation += RelationQuery.calculateGrandRelation(target, p2, gp4);\r\n    return relation;\r\n  }\r\n\r\n  horses: string[];\r\n\r\n  constructor(props: IProps) {\r\n    super(props);\r\n    this.horses = Object.keys(characters);\r\n    this.state = {\r\n      horseId: '',\r\n      horseId2: '',\r\n      horseId2Img: '',\r\n\r\n      P1: '',\r\n      P2: '',\r\n      Gp1: '',\r\n      Gp2: '',\r\n      Gp3: '',\r\n      Gp4: '',\r\n    };\r\n  }\r\n\r\n  selectHorse = (event: any) => {\r\n    const { value } = event.target;\r\n    this.setState({ horseId: value });\r\n  };\r\n\r\n  selectHorse2 = (event: any) => {\r\n    const { value } = event.target;\r\n    this.setState({ horseId2: value });\r\n  };\r\n\r\n  buildBestArray(inputId:string | undefined) {\r\n    // const { horseId } = this.state;\r\n    const { localization } = this.props;\r\n    let rel: HorseGreatRow[] = [];\r\n\r\n    let rel3: HorseAllRela[] = [];\r\n    this.horses.forEach((targetHorseId) => {\r\n      if (targetHorseId !== inputId) {\r\n        const relation1: number = RelationQuery.calculateRelation(inputId, targetHorseId);\r\n\r\n        let rel2: HorseRela[] = [];\r\n        this.horses.forEach((parentHorseId) => {\r\n          if (targetHorseId !== parentHorseId || inputId !== parentHorseId) {\r\n            rel2.push({\r\n              id: parentHorseId,\r\n              relation: RelationQuery.calculateGrandRelation(inputId, targetHorseId, parentHorseId),\r\n            });\r\n          }\r\n        });\r\n        rel2 = _.sortBy(rel2, [(horseRela) => -horseRela.relation]);\r\n        rel.push({\r\n          id1: targetHorseId,\r\n          id2: rel2[0].id,\r\n          id3: rel2[1].id,\r\n          image1: `${process.env.PUBLIC_URL}/static/image/character/portrait/${targetHorseId}.png`,\r\n          relation1,\r\n          image2: `${process.env.PUBLIC_URL}/static/image/character/portrait/${rel2[0].id}.png`,\r\n          relation2: rel2[0].relation,\r\n          image3: `${process.env.PUBLIC_URL}/static/image/character/portrait/${rel2[1].id}.png`,\r\n          relation3: rel2[1].relation,\r\n          relationTotal: relation1 + rel2[0].relation + rel2[1].relation,\r\n        });\r\n      }\r\n    });\r\n    rel = _.sortBy(rel, [(horseGreatRow) => -horseGreatRow.relationTotal]);\r\n    for (let father = 0; father < rel.length - 1; father++) {\r\n      for (let mother = father + 1; mother < rel.length; mother++) {\r\n        rel3.push({\r\n          father: rel[father],\r\n          mother: rel[mother],\r\n          relation: RelationQuery.calculateRelation(rel[father].id1, rel[mother].id1) + rel[father].relationTotal + rel[mother].relationTotal,\r\n        });\r\n      }\r\n    }\r\n\r\n    rel3 = _.sortBy(rel3, [(Horseallrela) => -Horseallrela.relation]);\r\n    rel3 = rel3.slice(0, 4);\r\n    return [\r\n      rel.map((horseGreatRow) => (\r\n        <>\r\n          <tr>\r\n\r\n            <td rowSpan={2}><img className=\"portrait\" src={horseGreatRow.image1} /></td>\r\n            <td rowSpan={2} width=\"15%\">{horseGreatRow.relation1}</td>\r\n            <td><img className=\"portrait\" src={horseGreatRow.image2} /></td>\r\n            <td width=\"15%\">{horseGreatRow.relation2}</td>\r\n\r\n            <td rowSpan={2} width=\"15%\">{horseGreatRow.relationTotal}</td>\r\n          </tr>\r\n          <tr>\r\n            <td><img className=\"portrait\" src={horseGreatRow.image3} /></td>\r\n            <td width=\"15%\">{horseGreatRow.relation3}</td>\r\n          </tr>\r\n        </>\r\n      )),\r\n      rel3.map((Horseallrela) => (\r\n        <>\r\n          <tr>\r\n            <td rowSpan={4}>{Horseallrela.relation}</td>\r\n            <td rowSpan={2}><img className=\"portrait\" src={Horseallrela.father.image1} /></td>\r\n            <td><img className=\"portrait\" src={Horseallrela.father.image2} /></td>\r\n          </tr>\r\n          <tr>\r\n            <td><img className=\"portrait\" src={Horseallrela.father.image3} /></td>\r\n          </tr>\r\n          <tr>\r\n            <td rowSpan={2}><img className=\"portrait\" src={Horseallrela.mother.image1} /></td>\r\n            <td><img className=\"portrait\" src={Horseallrela.mother.image2} /></td>\r\n          </tr>\r\n          <tr>\r\n            <td><img className=\"portrait\" src={Horseallrela.mother.image3} /></td>\r\n          </tr>\r\n        </>\r\n      )),\r\n    ];\r\n  }\r\n\r\n  buildGrandArray(inputId:string | undefined, inputId2:string) {\r\n    // const { horseId } = this.state;\r\n    const { localization } = this.props;\r\n    let rel: HorseRow[] = [];\r\n    this.horses.forEach((targetHorseId) => {\r\n      if (targetHorseId !== inputId && targetHorseId !== inputId2) {\r\n        rel.push({\r\n          id: targetHorseId,\r\n          name: localization.character.name[targetHorseId],\r\n          relation: RelationQuery.calculateGrandRelation(inputId, inputId2, targetHorseId),\r\n          image: `${process.env.PUBLIC_URL}/static/image/character/portrait/${targetHorseId}.png`,\r\n        });\r\n      }\r\n    });\r\n    rel = _.sortBy(rel, [(horseRow) => -horseRow.relation]);\r\n\r\n    return rel.map((horseRow) => (\r\n      <>\r\n        <tr>\r\n          <td>{horseRow.name}</td>\r\n          <td><img className=\"portrait\" src={horseRow.image} alt={horseRow.name} /></td>\r\n          <td width=\"15%\">{horseRow.relation}</td>\r\n        </tr>\r\n      </>\r\n    ));\r\n  }\r\n\r\n  buildRelationArray(inputId:string | undefined) {\r\n    // const { horseId } = this.state;\r\n    const { localization } = this.props;\r\n    let rel: HorseRow[] = [];\r\n    this.horses.forEach((targetHorseId) => {\r\n      if (targetHorseId !== inputId) {\r\n        rel.push({\r\n          id: targetHorseId,\r\n          name: localization.character.name[targetHorseId],\r\n          relation: RelationQuery.calculateRelation(inputId, targetHorseId),\r\n          image: `${process.env.PUBLIC_URL}/static/image/character/portrait/${targetHorseId}.png`,\r\n        });\r\n      }\r\n    });\r\n    rel = _.sortBy(rel, [(horseRow) => -horseRow.relation]);\r\n\r\n    return rel.map((horseRow) => (\r\n      <>\r\n        <tr onClick={() => this.setState({ horseId2: horseRow.id, horseId2Img: horseRow.image })}>\r\n          <td>{horseRow.name}</td>\r\n          <td><img className=\"portrait\" src={horseRow.image} alt={horseRow.name} /></td>\r\n          <td width=\"15%\">{horseRow.relation}</td>\r\n        </tr>\r\n      </>\r\n    ));\r\n  }\r\n\r\n  selectP1 = (event: any) => {\r\n    const { value } = event.target;\r\n    this.setState({ P1: value });\r\n  };\r\n\r\n  selectP2 = (event: any) => {\r\n    const { value } = event.target;\r\n    this.setState({ P2: value });\r\n  };\r\n\r\n  selectGp1 = (event: any) => {\r\n    const { value } = event.target;\r\n    this.setState({ Gp1: value });\r\n  };\r\n\r\n  selectGp2 = (event: any) => {\r\n    const { value } = event.target;\r\n    this.setState({ Gp2: value });\r\n  };\r\n\r\n  selectGp3 = (event: any) => {\r\n    const { value } = event.target;\r\n    this.setState({ Gp3: value });\r\n  };\r\n\r\n  selectGp4 = (event: any) => {\r\n    const { value } = event.target;\r\n    this.setState({ Gp4: value });\r\n  };\r\n\r\n  buildSelfRalation() {\r\n    const selfrelation = RelationQuery.calculatePairRelation(this.state.horseId, this.state.P1, this.state.P2, this.state.Gp1, this.state.Gp2, this.state.Gp3, this.state.Gp4);\r\n    const { localization } = this.props;\r\n    return (\r\n      <table>\r\n        <th colSpan={3}>self select</th>\r\n        <tr>\r\n          <td rowSpan={4}>{selfrelation}</td>\r\n          <td rowSpan={2}>\r\n            <Select\r\n              labelId=\"demo-simple-select-label\"\r\n              id=\"demo-simple-select\"\r\n              onChange={this.selectP1}\r\n            >\r\n              { this.horses.map((targetHorseId) => (\r\n                <MenuItem key={`${targetHorseId}_option`} value={targetHorseId}>\r\n                  <img\r\n                    className=\"portrait\"\r\n                    src={`${process.env.PUBLIC_URL}/static/image/character/portrait/${targetHorseId}.png`}\r\n                    alt={localization.character.name[targetHorseId]}\r\n                  />\r\n\r\n                </MenuItem>\r\n              ))}\r\n            </Select>\r\n          </td>\r\n          <td>\r\n            <Select\r\n              labelId=\"demo-simple-select-label\"\r\n              id=\"demo-simple-select\"\r\n              onChange={this.selectGp1}\r\n            >\r\n              { this.horses.map((targetHorseId) => (\r\n                <MenuItem key={`${targetHorseId}_option`} value={targetHorseId}>\r\n                  <img\r\n                    className=\"portrait\"\r\n                    src={`${process.env.PUBLIC_URL}/static/image/character/portrait/${targetHorseId}.png`}\r\n                    alt={localization.character.name[targetHorseId]}\r\n                  />\r\n\r\n                </MenuItem>\r\n              ))}\r\n            </Select>\r\n          </td>\r\n        </tr>\r\n        <tr>\r\n          <td>\r\n            <Select\r\n              labelId=\"demo-simple-select-label\"\r\n              id=\"demo-simple-select\"\r\n              onChange={this.selectGp2}\r\n            >\r\n              { this.horses.map((targetHorseId) => (\r\n                <MenuItem key={`${targetHorseId}_option`} value={targetHorseId}>\r\n                  <img\r\n                    className=\"portrait\"\r\n                    src={`${process.env.PUBLIC_URL}/static/image/character/portrait/${targetHorseId}.png`}\r\n                    alt={localization.character.name[targetHorseId]}\r\n                  />\r\n\r\n                </MenuItem>\r\n              ))}\r\n            </Select>\r\n          </td>\r\n        </tr>\r\n        <tr>\r\n\r\n          <td rowSpan={2}>\r\n            <Select\r\n              labelId=\"demo-simple-select-label\"\r\n              id=\"demo-simple-select\"\r\n              onChange={this.selectP2}\r\n            >\r\n              { this.horses.map((targetHorseId) => (\r\n                <MenuItem key={`${targetHorseId}_option`} value={targetHorseId}>\r\n                  <img\r\n                    className=\"portrait\"\r\n                    src={`${process.env.PUBLIC_URL}/static/image/character/portrait/${targetHorseId}.png`}\r\n                    alt={localization.character.name[targetHorseId]}\r\n                  />\r\n\r\n                </MenuItem>\r\n              ))}\r\n            </Select>\r\n          </td>\r\n          <td>\r\n            <Select\r\n              labelId=\"demo-simple-select-label\"\r\n              id=\"demo-simple-select\"\r\n              onChange={this.selectGp3}\r\n            >\r\n              { this.horses.map((targetHorseId) => (\r\n                <MenuItem key={`${targetHorseId}_option`} value={targetHorseId}>\r\n                  <img\r\n                    className=\"portrait\"\r\n                    src={`${process.env.PUBLIC_URL}/static/image/character/portrait/${targetHorseId}.png`}\r\n                    alt={localization.character.name[targetHorseId]}\r\n                  />\r\n\r\n                </MenuItem>\r\n              ))}\r\n            </Select>\r\n          </td>\r\n        </tr>\r\n        <tr>\r\n          <td>\r\n            <Select\r\n              labelId=\"demo-simple-select-label\"\r\n              id=\"demo-simple-select\"\r\n              onChange={this.selectGp4}\r\n            >\r\n              { this.horses.map((targetHorseId) => (\r\n                <MenuItem key={`${targetHorseId}_option`} value={targetHorseId}>\r\n                  <img\r\n                    className=\"portrait\"\r\n                    src={`${process.env.PUBLIC_URL}/static/image/character/portrait/${targetHorseId}.png`}\r\n                    alt={localization.character.name[targetHorseId]}\r\n                  />\r\n\r\n                </MenuItem>\r\n              ))}\r\n            </Select>\r\n          </td>\r\n        </tr>\r\n      </table>\r\n    );\r\n  }\r\n\r\n  render() {\r\n    const { localization } = this.props;\r\n    const relationArray = this.buildRelationArray(this.state.horseId);\r\n    const grandArray = this.buildGrandArray(this.state.horseId, this.state.horseId2);\r\n    const [sideRelationArray, bestRelation] = this.buildBestArray(this.state.horseId);\r\n    const selfRelation = this.buildSelfRalation();\r\n    return (\r\n      <div className=\"content\">\r\n        <div className=\"dropdown\">\r\n          <FormControl>\r\n            <InputLabel id=\"demo-simple-select-label\">ウマ</InputLabel>\r\n            <Select\r\n              labelId=\"demo-simple-select-label\"\r\n              id=\"demo-simple-select\"\r\n              onChange={this.selectHorse}\r\n\r\n            >\r\n              { this.horses.map((targetHorseId) => (\r\n                <MenuItem key={`${targetHorseId}_option`} value={targetHorseId}>\r\n                  <img\r\n                    className=\"portrait\"\r\n                    src={`${process.env.PUBLIC_URL}/static/image/character/portrait/${targetHorseId}.png`}\r\n                    alt={localization.character.name[targetHorseId]}\r\n                  />\r\n                  {localization.character.name[targetHorseId]}\r\n                </MenuItem>\r\n              ))}\r\n            </Select>\r\n\r\n          </FormControl>\r\n\r\n        </div>\r\n        <table style={{ float: 'left', marginRight: '20px' }}>\r\n\r\n          {relationArray}\r\n        </table>\r\n        <table style={{ float: 'left', marginRight: '20px' }}>\r\n          <th>\r\n            そふぼ\r\n            <br />\r\n            click left table Img\r\n          </th>\r\n          <th colSpan={2}><img className=\"portrait\" src={this.state.horseId2Img} /></th>\r\n\r\n          {grandArray}\r\n        </table>\r\n        <table style={{ float: 'left', marginRight: '20px' }}>\r\n          <th colSpan={5}>Side parent</th>\r\n          {sideRelationArray}\r\n        </table>\r\n        <table style={{ float: 'left' }}>\r\n          <th colSpan={3}>Best couple</th>\r\n          {bestRelation}\r\n        </table>\r\n        {selfRelation}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default RelationQuery;\r\n","import _ from 'lodash';\r\nimport InputLabel from '@material-ui/core/InputLabel';\r\nimport MenuItem from '@material-ui/core/MenuItem';\r\nimport FormControl from '@material-ui/core/FormControl';\r\nimport Select from '@material-ui/core/Select';\r\nimport React, { Component } from 'react';\r\n\r\nimport '../../app.css';\r\nimport './relation.css';\r\n\r\nimport { InputNumber, Row } from 'antd';\r\nimport { LocalizationData } from '../../library/common';\r\nimport characterJson from '../../db/character.json';\r\nimport relationJson from '../../db/relation.json';\r\nimport relationMemberJson from '../../db/relation_member.json';\r\n\r\nconst characters = characterJson as { [key: string]: {} };\r\nconst relations = relationJson as { [key: string]: string };\r\nconst relationMembers = relationMemberJson as { [key: string]: string[] };\r\n\r\ninterface HorseRow {\r\n  id: string;\r\n  name: string;\r\n  relation: number;\r\n  image: string;\r\n}\r\ninterface HorseGreatRow {\r\n  parent:string\r\n  grandMother:string\r\n  grandFather:string\r\n  tagetOneRelation: number;\r\n  tagetTwoRelation: number;\r\n  tagetThreeRelation: number;\r\n  relationTotal: number;\r\n}\r\ninterface HorseAllRela{\r\n  father:HorseGreatRow\r\n  mother:HorseGreatRow\r\n  relation:number\r\n}\r\ninterface HorseRela {\r\n  id: string;\r\n  relation: number;\r\n}\r\n\r\ninterface Horsecompare{\r\n  targetOne: string,\r\n  targetTwo: string,\r\n  targetThree: string,\r\n  parentOne: string,\r\n  parentTwo: string,\r\n  grandParentOne: string,\r\n  grandParentTwo: string,\r\n  grandParentThree: string,\r\n  grandParentFour: string,\r\n  targetOneRela: number,\r\n  targetTwoRela: number,\r\n  targetThreeRela: number,\r\n  sum:number,\r\n}\r\n\r\ninterface IProps {\r\n  localization: LocalizationData;\r\n}\r\n\r\nconst tableStyle = {\r\n  float: 'left',\r\n};\r\n\r\ninterface IState {\r\n  targetOne: string,\r\n  targetTwo: string,\r\n  targetThree: string,\r\n  parentOne: string,\r\n  parentTwo: string,\r\n  grandParentOne: string,\r\n  grandParentTwo: string,\r\n  grandParentThree: string,\r\n  grandParentFour: string,\r\n  targetOneMin: number,\r\n  targetTwoMin: number,\r\n  targetThreeMin: number,\r\n}\r\n\r\nclass ReverseQuery extends Component<IProps, IState> {\r\n  // eslint-disable-next-line react/sort-comp\r\n  selectTargetOne = (event: any) => {\r\n    const { value } = event.target;\r\n    let State = {...this.state};\r\n    State.targetOne = value;\r\n    this.buildRelationArray(State);\r\n    this.setState(state =>({ targetOne: value }));\r\n  };\r\n\r\n  selectTargetTwo = (event: any) => {\r\n    const { value } = event.target;\r\n    let State = {...this.state};\r\n    State.targetTwo = value;\r\n    this.buildRelationArray(State);\r\n    this.setState({ targetTwo: value });\r\n  };\r\n\r\n  selectTargetThree = (event: any) => {\r\n    const { value } = event.target;\r\n    let State = {...this.state};\r\n    State.targetThree = value;\r\n    this.buildRelationArray(State);\r\n    this.setState({ targetThree: value });\r\n  };\r\n\r\n  selectTargetOneMin = (value: any) => {\r\n    this.setState({ targetOneMin: value });\r\n  };\r\n\r\n  selectTargetTwoMin = (value: any) => {\r\n    this.setState({ targetTwoMin: value });\r\n  };\r\n\r\n  selectTargetThreeMin = (value: any) => {\r\n    this.setState({ targetThreeMin: value });\r\n  };\r\n\r\n  selectParentOne = (event: any) => {\r\n    const { value } = event.target;\r\n    let State = {...this.state};\r\n    State.parentOne = value;\r\n    this.buildRelationArray(State);\r\n    this.setState({ parentOne: value });\r\n  };\r\n\r\n  selectParentTwo = (event: any) => {\r\n    const { value } = event.target;\r\n    let State = {...this.state};\r\n    State.parentTwo = value;\r\n    this.buildRelationArray(State);\r\n    this.setState({ parentTwo: value });\r\n  };\r\n\r\n  selectGrandParentOne = (event: any) => {\r\n    const { value } = event.target;\r\n    let State = {...this.state};\r\n    State.grandParentOne = value;\r\n    this.buildRelationArray(State);\r\n    this.setState({ grandParentOne: value });\r\n  };\r\n\r\n  selectGrandParentTwo = (event: any) => {\r\n    const { value } = event.target;\r\n    let State = {...this.state};\r\n    State.grandParentTwo = value;\r\n    this.buildRelationArray(State);\r\n    this.setState({ grandParentTwo: value });\r\n  };\r\n\r\n  selectGrandParentThree = (event: any) => {\r\n    const { value } = event.target;\r\n    let State = {...this.state};\r\n    State.grandParentThree = value;\r\n    this.buildRelationArray(State);\r\n    this.setState({ grandParentThree: value });\r\n  };\r\n\r\n  selectGrandParentFour = (event: any) => {\r\n    const { value } = event.target;\r\n    let State = {...this.state};\r\n    State.grandParentFour = value;\r\n    this.buildRelationArray(State);\r\n    this.setState({ grandParentFour: value });\r\n  };\r\n\r\n  horses: string[];\r\n  relationArray : Horsecompare[] = [];\r\n  \r\n\r\n  constructor(props: IProps) {\r\n    super(props);\r\n    this.horses = Object.keys(characters);\r\n    this.state = {\r\n      targetOne: '1001',\r\n      targetTwo: '1002',\r\n      targetThree: '1003',\r\n      parentOne: '1004',\r\n      parentTwo: '1005',\r\n      grandParentOne: '1006',\r\n      grandParentTwo: '1007',\r\n      grandParentThree: '1008',\r\n      grandParentFour: '1009',\r\n      targetOneMin: 0,\r\n      targetTwoMin: 0,\r\n      targetThreeMin: 0,\r\n    };\r\n    this.buildRelationArray(this.state);\r\n  }\r\n  \r\n\r\n  calculateRelation(id1: string | undefined, id2: string): number {\r\n    if (id1 === id2 || id1 === undefined) {\r\n      return 0;\r\n    }\r\n    const targetRelations: string[] = _.intersection(relationMembers[id1], relationMembers[id2]);\r\n    const hourseRela = _.reduce(targetRelations, (sum: number, id: string) => sum + parseInt(relations[id], 10), 0);\r\n    return hourseRela;\r\n  }\r\n\r\n  calculateGrandRelation(id1: string | undefined, id2: string, id3: string): number {\r\n    if (id1 === id2 || id1 === undefined || id1 === id3 || id2 === id3) {\r\n      return 0;\r\n    }\r\n    const targetRelations: string[] = _.intersection(relationMembers[id1], relationMembers[id2], relationMembers[id3]);\r\n    const hourseRela = _.reduce(targetRelations, (sum: number, id: string) => sum + parseInt(relations[id], 10), 0);\r\n    return hourseRela;\r\n  }\r\n  calculateGrandSRelation(target: string|undefined, p1: string, gp1: string, gp2: string): number {\r\n    if (target === p1 || target === undefined || p1 === gp1 || p1 === gp2 || gp1 === gp2) {\r\n      return 0;\r\n    }\r\n    \r\n    return this.calculateRelation(target,p1) + this.calculateGrandRelation(target, p1, gp1) + this.calculateGrandRelation(target, p1, gp2);\r\n  }\r\n\r\n  calculatePairRelation(target: string | undefined, p1: string, p2: string, gp1: string, gp2: string, gp3: string, gp4: string) {\r\n    if (target === undefined || target === p1 || target === p2 || p1 === p2) {\r\n      return 0;\r\n    }\r\n\r\n    let relation:number = 0;\r\n    relation += this.calculateRelation(target, p1);\r\n    relation += this.calculateRelation(target, p2);\r\n    relation += this.calculateRelation(p1, p2);\r\n    relation += this.calculateGrandRelation(target, p1, gp1);\r\n    relation += this.calculateGrandRelation(target, p1, gp2);\r\n    relation += this.calculateGrandRelation(target, p2, gp3);\r\n    relation += this.calculateGrandRelation(target, p2, gp4);\r\n\r\n    return relation;\r\n  }\r\n\r\n  makeHourseList(inputId:string | undefined) {\r\n    let hourseList : string[];\r\n    hourseList = [];\r\n    if (inputId === undefined) {\r\n      return hourseList;\r\n    }\r\n    if (inputId === '0000') {\r\n      hourseList = hourseList.concat(this.horses);\r\n    } else {\r\n      hourseList.push(inputId);\r\n    }\r\n    return hourseList;\r\n  }\r\n  buildParentArray(targetOne:string, targetTwo:string, targetThree:string, parentList : string[], gFatherList : string[] , gMotherList : string[]){\r\n    let parentArray:HorseGreatRow[] = [];\r\n\r\n\r\n    parentList.forEach((parent)=>{\r\n      \r\n      gFatherList.forEach((grandFather)=>{\r\n        gMotherList.forEach((grandMother)=>{\r\n\r\n          if(parent !==grandFather || parent !==grandMother || grandFather !== grandMother){\r\n            const relation1 = this.calculateGrandSRelation(targetOne,parent,grandFather,grandMother);\r\n            const relation2 = this.calculateGrandSRelation(targetTwo,parent,grandFather,grandMother);\r\n            const relation3 = this.calculateGrandSRelation(targetThree,parent,grandFather,grandMother);\r\n            const relationTotal = relation1 + relation2 + relation3;\r\n            let IsSkyline = true;\r\n            for(let index = 0; index < parentArray.length; index++){\r\n              if(relation1 < parentArray[index].tagetOneRelation && \r\n                 relation2 < parentArray[index].tagetTwoRelation && \r\n                 relation3 < parentArray[index].tagetThreeRelation && \r\n                 relationTotal < parentArray[index].relationTotal ){\r\n                  IsSkyline = false;\r\n                  break;\r\n              }\r\n            }\r\n            if(IsSkyline){\r\n              parentArray.push({\r\n                parent:parent,\r\n                grandMother:grandMother,\r\n                grandFather:grandFather,\r\n                tagetOneRelation: relation1,\r\n                tagetTwoRelation: relation2,\r\n                tagetThreeRelation: relation3,\r\n                relationTotal: relationTotal,\r\n              })\r\n            }\r\n            \r\n          }\r\n        })\r\n      })\r\n      for(let index = 0; index < parentArray.length;index++){\r\n        for(let index2 = parentArray.length - 1; index2 > index;index2--){\r\n          if(parentArray[index2].tagetOneRelation < parentArray[index].tagetOneRelation && \r\n            parentArray[index2].tagetOneRelation < parentArray[index].tagetTwoRelation && \r\n            parentArray[index2].tagetOneRelation < parentArray[index].tagetThreeRelation && \r\n            parentArray[index2].tagetOneRelation < parentArray[index].relationTotal ){\r\n              parentArray.splice(index2,1)\r\n              \r\n          }\r\n        \r\n        }\r\n      }\r\n      \r\n    })\r\n    return parentArray;\r\n  }\r\n  \r\n  buildRelationArray(input:IState) {\r\n    const  relationArray : Horsecompare[] = [];\r\n    \r\n    const targetOne = input.targetOne;\r\n    const targetTwo = input.targetTwo;\r\n    const targetThree = input.targetThree;\r\n\r\n    const parentOne = input.parentOne;\r\n    const parentTwo = input.parentTwo;\r\n\r\n    const grandParentOne = input.grandParentOne;\r\n    const grandparentTwo = input.grandParentTwo;\r\n    const grandParentThree = input.grandParentThree;\r\n    const grandParentFour = input.grandParentFour;\r\n\r\n\r\n    let t0 = performance.now();\r\n    let t1 = performance.now();\r\n\r\n    let p1List : string[];\r\n    let p2List : string[];\r\n    let gp1List : string[];\r\n    let gp2List : string[];\r\n    let gp3List : string[];\r\n    let gp4List : string[];\r\n\r\n    p1List = this.makeHourseList(parentOne);\r\n    p2List = this.makeHourseList(parentTwo);\r\n    gp1List = this.makeHourseList(grandParentOne);\r\n    gp2List = this.makeHourseList(grandparentTwo);\r\n    gp3List = this.makeHourseList(grandParentThree);\r\n    gp4List = this.makeHourseList(grandParentFour);\r\n    if (JSON.stringify(p1List) == JSON.stringify(p2List)) {\r\n      console.log(\"yes\");\r\n    }\r\n    \r\n\r\n    let Father:HorseGreatRow[] = [];\r\n    let Mother:HorseGreatRow[] = [];\r\n    t1 = performance.now();\r\n    t0 = performance.now();\r\n    \r\n    Father = this.buildParentArray(targetOne, targetTwo, targetThree, p1List,gp1List,gp2List);\r\n    t1 = performance.now();\r\n    console.log(\"Father time \" + (t1 - t0) + \" milliseconds. father leng = \" + Father.length);\r\n    t0 = performance.now();\r\n\r\n    Mother = this.buildParentArray(targetOne, targetTwo, targetThree,p2List,gp3List,gp4List);\r\n\r\n    t1 = performance.now();\r\n    console.log(\"Mother time \" + (t1 - t0) + \" milliseconds. mother leng = \" + Mother.length);\r\n    t0 = performance.now();\r\n    let cal = (relaone:number,relatwo:number,relathree:number)=>{\r\n      if(relaone===0 || relatwo===0|| relathree===0)\r\n      {\r\n        return 0;\r\n      }\r\n      return relaone + relatwo + relathree;\r\n    };\r\n\r\n    Father.forEach((father)=>{\r\n      Mother.forEach((mother)=>{\r\n        if(father.parent !== mother.parent){\r\n          const targetOneRela = cal(father.tagetOneRelation, mother.tagetOneRelation, this.calculateRelation(father.parent,mother.parent));\r\n          const targetTwoRela = cal(father.tagetTwoRelation, mother.tagetTwoRelation, this.calculateRelation(father.parent,mother.parent));\r\n          const targetThreeRela = cal(father.tagetThreeRelation, mother.tagetThreeRelation, this.calculateRelation(father.parent,mother.parent));\r\n          const relationTotal = targetOneRela + targetTwoRela + targetThreeRela;\r\n          relationArray.push({\r\n            targetOne: targetOne,\r\n            targetTwo: targetTwo,\r\n            targetThree: targetThree,\r\n            parentOne: father.parent,\r\n            parentTwo: mother.parent,\r\n            grandParentOne: father.grandFather,\r\n            grandParentTwo: father.grandMother,\r\n            grandParentThree: mother.grandFather,\r\n            grandParentFour: mother.grandMother,\r\n            targetOneRela: targetOneRela,\r\n            targetTwoRela: targetTwoRela,\r\n            targetThreeRela: targetThreeRela,\r\n            sum:  relationTotal,\r\n          })\r\n        }\r\n      })\r\n    })\r\n   \r\n\r\n    t1 = performance.now();\r\n    console.log(\"Parent time\" + (t1 - t0) + \" milliseconds.\");\r\n    this.relationArray = relationArray;\r\n    /*\r\n    t0 = performance.now();\r\n    \r\n    const relatoinArray = relationArray.filter((hourseCompare) => (hourseCompare.targetOneRela >= this.state.targetOneMin\r\n      && hourseCompare.targetTwoRela >= this.state.targetTwoMin\r\n      && hourseCompare.targetThreeRela >= this.state.targetThreeMin));\r\n    const bestRelation :Horsecompare = _.sortBy(relatoinArray, [(horseRela) => -horseRela.sum])[0];\r\n    \r\n    t1 = performance.now();\r\n    console.log(\"filter time \" + (t1 - t0) + \" milliseconds.\");\r\n    const bestTable = this.buildBestTable(bestRelation);\r\n    */\r\n\r\n    //return bestTable;\r\n  }\r\n\r\n  buildBestTable(relation: Horsecompare | undefined) {\r\n    if (relation === undefined) return <></>;\r\n    const tagetOneImage = `${process.env.PUBLIC_URL}/static/image/character/portrait/${relation.targetOne}.png`;\r\n    const tagetTwoImage = `${process.env.PUBLIC_URL}/static/image/character/portrait/${relation.targetTwo}.png`;\r\n    const tagetThreeImage = `${process.env.PUBLIC_URL}/static/image/character/portrait/${relation.targetThree}.png`;\r\n\r\n    const p1Img = `${process.env.PUBLIC_URL}/static/image/character/portrait/${relation.parentOne}.png`;\r\n    const p2Img = `${process.env.PUBLIC_URL}/static/image/character/portrait/${relation.parentTwo}.png`;\r\n    const gp1Img = `${process.env.PUBLIC_URL}/static/image/character/portrait/${relation.grandParentOne}.png`;\r\n    const gp2Img = `${process.env.PUBLIC_URL}/static/image/character/portrait/${relation.grandParentTwo}.png`;\r\n    const gp3Img = `${process.env.PUBLIC_URL}/static/image/character/portrait/${relation.grandParentThree}.png`;\r\n    const gp4Img = `${process.env.PUBLIC_URL}/static/image/character/portrait/${relation.grandParentFour}.png`;\r\n\r\n    return (\r\n      <>\r\n        <table style={{ float: 'left', marginRight: '20px' }}>\r\n          <tr>\r\n            <td><img className=\"portrait\" src={tagetOneImage} alt={relation.targetOne} /></td>\r\n            <td>\r\n              {' '}\r\n              {relation.targetOneRela}\r\n            </td>\r\n          </tr>\r\n          <tr>\r\n            <td><img className=\"portrait\" src={tagetTwoImage} alt={relation.targetOne} /></td>\r\n            <td>\r\n              {' '}\r\n              {relation.targetTwoRela}\r\n            </td>\r\n          </tr>\r\n          <tr>\r\n            <td><img className=\"portrait\" src={tagetThreeImage} alt={relation.targetOne} /></td>\r\n\r\n            <td>\r\n              {' '}\r\n              {relation.targetThreeRela}\r\n            </td>\r\n          </tr>\r\n        </table>\r\n        <table style={{ float: 'left', marginRight: '20px' }}>\r\n          <tr>\r\n            <td rowSpan={2}><img className=\"portrait\" src={p1Img} /></td>\r\n            <td><img className=\"portrait\" src={gp1Img} /></td>\r\n          </tr>\r\n          <tr>\r\n            <td><img className=\"portrait\" src={gp2Img} /></td>\r\n          </tr>\r\n          <tr>\r\n            <td rowSpan={2}><img className=\"portrait\" src={p2Img} /></td>\r\n            <td><img className=\"portrait\" src={gp3Img} /></td>\r\n          </tr>\r\n          <tr>\r\n            <td><img className=\"portrait\" src={gp4Img} /></td>\r\n          </tr>\r\n        </table>\r\n      </>\r\n    );\r\n  }\r\n\r\n  render() {\r\n    \r\n    const { localization } = this.props;\r\n    let selectParentList : string[] = [];\r\n    selectParentList.push('0000');\r\n    selectParentList = selectParentList.concat(this.horses);\r\n\r\n    \r\n    const relatoinArray = this.relationArray.filter((hourseCompare) => (hourseCompare.targetOneRela >= this.state.targetOneMin\r\n      && hourseCompare.targetTwoRela >= this.state.targetTwoMin\r\n      && hourseCompare.targetThreeRela >= this.state.targetThreeMin));\r\n    const bestRelation :Horsecompare = _.sortBy(relatoinArray, [(horseRela) => -horseRela.sum])[0];\r\n    \r\n    const bestTable = this.buildBestTable(bestRelation);\r\n    \r\n    return (\r\n      <div className=\"content\">\r\n        <div>\r\n          <span style={{ color: 'red' }}>six unknown uma may crash</span>\r\n        </div>\r\n        <div className=\"dropdown\">\r\n          <FormControl>\r\n            <InputLabel id=\"demo-simple-select-label\">Target</InputLabel>\r\n            <Select\r\n              defaultValue=\"1001\"\r\n              labelId=\"demo-simple-select-label\"\r\n              id=\"demo-simple-select\"\r\n              onChange={this.selectTargetOne}\r\n            >\r\n              { this.horses.map((targetHorseId) => (\r\n                <MenuItem key={`${targetHorseId}_option`} value={targetHorseId}>\r\n                  <img\r\n                    className=\"portrait\"\r\n                    src={`${process.env.PUBLIC_URL}/static/image/character/portrait/${targetHorseId}.png`}\r\n                    alt={localization.character.name[targetHorseId]}\r\n                  />\r\n                  {localization.character.name[targetHorseId]}\r\n                </MenuItem>\r\n              ))}\r\n            </Select>\r\n            <Select\r\n              defaultValue=\"1002\"\r\n              labelId=\"demo-simple-select-label\"\r\n              id=\"demo-simple-select\"\r\n              onChange={this.selectTargetTwo}\r\n            >\r\n              { this.horses.map((targetHorseId) => (\r\n                <MenuItem key={`${targetHorseId}_option`} value={targetHorseId}>\r\n                  <img\r\n                    className=\"portrait\"\r\n                    src={`${process.env.PUBLIC_URL}/static/image/character/portrait/${targetHorseId}.png`}\r\n                    alt={localization.character.name[targetHorseId]}\r\n                  />\r\n                  {localization.character.name[targetHorseId]}\r\n                </MenuItem>\r\n              ))}\r\n            </Select>\r\n            <Select\r\n              defaultValue=\"1003\"\r\n              labelId=\"demo-simple-select-label\"\r\n              id=\"demo-simple-select\"\r\n              onChange={this.selectTargetThree}\r\n            >\r\n              { this.horses.map((targetHorseId) => (\r\n                <MenuItem key={`${targetHorseId}_option`} value={targetHorseId}>\r\n                  <img\r\n                    className=\"portrait\"\r\n                    src={`${process.env.PUBLIC_URL}/static/image/character/portrait/${targetHorseId}.png`}\r\n                    alt={localization.character.name[targetHorseId]}\r\n                  />\r\n                  {localization.character.name[targetHorseId]}\r\n                </MenuItem>\r\n              ))}\r\n            </Select>\r\n          </FormControl>\r\n          <FormControl>\r\n            <InputLabel id=\"demo-simple-select-label\">Parents1</InputLabel>\r\n\r\n            <Select\r\n              defaultValue=\"1004\"\r\n              labelId=\"demo-simple-select-label\"\r\n              id=\"demo-simple-select\"\r\n              onChange={this.selectParentOne}\r\n\r\n            >\r\n              { selectParentList.map((targetHorseId) => (\r\n                <MenuItem key={`${targetHorseId}_option`} value={targetHorseId}>\r\n                  <img\r\n                    className=\"portrait\"\r\n                    src={`${process.env.PUBLIC_URL}/static/image/character/portrait/${targetHorseId}.png`}\r\n                    alt={localization.character.name[targetHorseId]}\r\n                  />\r\n                  {localization.character.name[targetHorseId]}\r\n                </MenuItem>\r\n              ))}\r\n            </Select>\r\n            <Select\r\n              defaultValue=\"1006\"\r\n              labelId=\"demo-simple-select-label\"\r\n              id=\"demo-simple-select\"\r\n              onChange={this.selectGrandParentOne}\r\n\r\n            >\r\n              { selectParentList.map((targetHorseId) => (\r\n                <MenuItem key={`${targetHorseId}_option`} value={targetHorseId}>\r\n                  <img\r\n                    className=\"portrait\"\r\n                    src={`${process.env.PUBLIC_URL}/static/image/character/portrait/${targetHorseId}.png`}\r\n                    alt={localization.character.name[targetHorseId]}\r\n                  />\r\n                  {localization.character.name[targetHorseId]}\r\n                </MenuItem>\r\n              ))}\r\n            </Select>\r\n            <Select\r\n              defaultValue=\"1007\"\r\n              labelId=\"demo-simple-select-label\"\r\n              id=\"demo-simple-select\"\r\n              onChange={this.selectGrandParentTwo}\r\n\r\n            >\r\n              { selectParentList.map((targetHorseId) => (\r\n                <MenuItem key={`${targetHorseId}_option`} value={targetHorseId}>\r\n                  <img\r\n                    className=\"portrait\"\r\n                    src={`${process.env.PUBLIC_URL}/static/image/character/portrait/${targetHorseId}.png`}\r\n                    alt={localization.character.name[targetHorseId]}\r\n                  />\r\n                  {localization.character.name[targetHorseId]}\r\n                </MenuItem>\r\n              ))}\r\n            </Select>\r\n          </FormControl>\r\n          <FormControl>\r\n            <InputLabel id=\"demo-simple-select-label\">Parents2</InputLabel>\r\n            <Select\r\n              defaultValue=\"1005\"\r\n              labelId=\"demo-simple-select-label\"\r\n              id=\"demo-simple-select\"\r\n              onChange={this.selectParentTwo}\r\n\r\n            >\r\n              { selectParentList.map((targetHorseId) => (\r\n                <MenuItem key={`${targetHorseId}_option`} value={targetHorseId}>\r\n                  <img\r\n                    className=\"portrait\"\r\n                    src={`${process.env.PUBLIC_URL}/static/image/character/portrait/${targetHorseId}.png`}\r\n                    alt={localization.character.name[targetHorseId]}\r\n                  />\r\n                  {localization.character.name[targetHorseId]}\r\n                </MenuItem>\r\n              ))}\r\n            </Select>\r\n            <Select\r\n              defaultValue=\"1008\"\r\n              labelId=\"demo-simple-select-label\"\r\n              id=\"demo-simple-select\"\r\n              onChange={this.selectGrandParentThree}\r\n\r\n            >\r\n              { selectParentList.map((targetHorseId) => (\r\n                <MenuItem key={`${targetHorseId}_option`} value={targetHorseId}>\r\n                  <img\r\n                    className=\"portrait\"\r\n                    src={`${process.env.PUBLIC_URL}/static/image/character/portrait/${targetHorseId}.png`}\r\n                    alt={localization.character.name[targetHorseId]}\r\n                  />\r\n                  {localization.character.name[targetHorseId]}\r\n                </MenuItem>\r\n              ))}\r\n            </Select>\r\n            <Select\r\n              defaultValue=\"1009\"\r\n              labelId=\"demo-simple-select-label\"\r\n              id=\"demo-simple-select\"\r\n              onChange={this.selectGrandParentFour}\r\n\r\n            >\r\n              { selectParentList.map((targetHorseId) => (\r\n                <MenuItem key={`${targetHorseId}_option`} value={targetHorseId}>\r\n                  <img\r\n                    className=\"portrait\"\r\n                    src={`${process.env.PUBLIC_URL}/static/image/character/portrait/${targetHorseId}.png`}\r\n                    alt={localization.character.name[targetHorseId]}\r\n                  />\r\n                  {localization.character.name[targetHorseId]}\r\n                </MenuItem>\r\n              ))}\r\n            </Select>\r\n\r\n          </FormControl>\r\n\r\n        </div>\r\n        <Row gutter={[1, 3]}>\r\n          <div className=\"flex\">\r\n            <span className=\"select-label\">target 1 Min</span>\r\n            <InputNumber className=\"select\" defaultValue={this.state.targetOneMin} min={0} max={200} onChange={this.selectTargetOneMin} />\r\n            <span className=\"select-label\">target 2 Min</span>\r\n            <InputNumber className=\"select\" defaultValue={this.state.targetOneMin} min={0} max={200} onChange={this.selectTargetTwoMin} />\r\n            <span className=\"select-label\">target 3 Min</span>\r\n            <InputNumber className=\"select\" defaultValue={this.state.targetOneMin} min={0} max={200} onChange={this.selectTargetThreeMin} />\r\n          </div>\r\n        </Row>\r\n        {bestTable}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default ReverseQuery;\r\n","import _ from 'lodash';\r\nimport {\r\n  Row, Col, Select,\r\n} from 'antd';\r\nimport React, { Component } from 'react';\r\n\r\nimport {\r\n  CourseCategory, CourseDataType, LocalizationData,\r\n} from '../library/common';\r\n\r\nimport 'antd/dist/antd.css';\r\nimport './component.css';\r\n\r\nconst { Option } = Select;\r\n\r\ninterface IProps {\r\n  localization: LocalizationData,\r\n  courseCategories: CourseCategory,\r\n  setData: (key: string, value: any) => void,\r\n  state: {\r\n    racecourse?: string,\r\n    ground?: string,\r\n    distance?: number,\r\n    course?: CourseDataType,\r\n  },\r\n}\r\n\r\ninterface IState {\r\n}\r\n\r\nclass CourseData extends Component<IProps, IState> {\r\n  constructor(props: IProps) {\r\n    super(props);\r\n    this.state = {\r\n    };\r\n  }\r\n\r\n  getRacecourseComponent() {\r\n    const { localization, setData, state } = this.props;\r\n    const { racecourse } = state;\r\n    return (\r\n      <Col span={4}>\r\n        <div className=\"flex\">\r\n          <span className=\"select-label\">{`${localization.site.Racecourse}:`}</span>\r\n          <Select className=\"select\" value={racecourse} onChange={(value) => setData('racecourse', value)}>\r\n            { _.map(localization.course.racecourse, (value: string, key: string) => (\r\n              <Option value={key}>{value}</Option>\r\n            ))}\r\n          </Select>\r\n        </div>\r\n      </Col>\r\n    );\r\n  }\r\n\r\n  getGroundComponent() {\r\n    const {\r\n      localization, courseCategories, setData, state,\r\n    } = this.props;\r\n    const { racecourse, ground } = state;\r\n\r\n    if (racecourse === undefined) {\r\n      return null;\r\n    }\r\n    return (\r\n      <Col span={4}>\r\n        <div className=\"flex\">\r\n          <span className=\"select-label\">{`${localization.site.Ground}:`}</span>\r\n          <Select className=\"select\" value={ground} onChange={(value) => setData('ground', value)}>\r\n            { _.map(courseCategories[racecourse], (value: string, key: string) => (\r\n              <Option value={key}>{localization.course.ground[key]}</Option>\r\n            ))}\r\n          </Select>\r\n        </div>\r\n      </Col>\r\n    );\r\n  }\r\n\r\n  getDistanceComponent() {\r\n    const {\r\n      localization, courseCategories, setData, state,\r\n    } = this.props;\r\n    const { racecourse, ground, distance } = state;\r\n\r\n    if (racecourse === undefined || ground === undefined) {\r\n      return null;\r\n    }\r\n    return (\r\n      <Col span={4}>\r\n        <div className=\"flex\">\r\n          <span className=\"select-label\">{`${localization.site.Distance}:`}</span>\r\n          <Select className=\"select\" value={distance} onChange={(value) => setData('distance', value)}>\r\n            { _.map(courseCategories[racecourse][ground], (value: string, key: number) => (\r\n              <Option value={key}>{key}</Option>\r\n            ))}\r\n          </Select>\r\n        </div>\r\n      </Col>\r\n    );\r\n  }\r\n\r\n  render() {\r\n    const racecourseComponent = this.getRacecourseComponent();\r\n    const groundComponent = this.getGroundComponent();\r\n    const distanceComponent = this.getDistanceComponent();\r\n\r\n    return (\r\n      <Row gutter={[8, 8]}>\r\n        {racecourseComponent}\r\n        {groundComponent}\r\n        {distanceComponent}\r\n      </Row>\r\n    );\r\n  }\r\n}\r\n\r\nexport default CourseData;\r\n","import _ from 'lodash';\r\nimport { Row, Col, Select } from 'antd';\r\nimport React, { Component } from 'react';\r\n\r\nimport { LocalizationData } from '../../library/common';\r\n\r\nimport '../component.css';\r\n\r\ninterface IProps {\r\n  localization: LocalizationData;\r\n  setData: (key: string, value: any) => void,\r\n  state: { [key: string]: string },\r\n\r\n}\r\n\r\ninterface IState {\r\n}\r\n\r\nclass HorseProperRate extends Component<IProps, IState> {\r\n  static readonly properRateTypes = {\r\n    GroundType: ['GroundTypeTurf', 'GroundTypeDirt'],\r\n    DistanceType: ['DistanceTypeShort', 'DistanceTypeMile', 'DistanceTypeMiddle', 'DistanceTypeLong'],\r\n    RunningStyle: ['RunningStyleNige', 'RunningStyleSenko', 'RunningStyleSashi', 'RunningStyleOikomi'],\r\n  };\r\n\r\n  static readonly properRate = {\r\n    G: '1',\r\n    F: '2',\r\n    E: '3',\r\n    D: '4',\r\n    C: '5',\r\n    B: '6',\r\n    A: '7',\r\n    S: '8',\r\n  };\r\n\r\n  render() {\r\n    const { localization, setData, state } = this.props;\r\n    return (\r\n      <>\r\n        { _.map(HorseProperRate.properRateTypes, (properTypes, properName) => (\r\n          <>\r\n            <Row gutter={[8, 8]}><Col span={24}>{localization.site[properName]}</Col></Row>\r\n            <Row gutter={[8, 8]}>\r\n              { _.map(properTypes, (properRateType) => {\r\n                const camelProperRateType = _.camelCase(properRateType);\r\n                return (\r\n                  <Col span={4}>\r\n                    <div className=\"flex\">\r\n                      <span className=\"select-label\">{`${localization.site[properRateType]}:`}</span>\r\n                      <Select className=\"select\" value={state[camelProperRateType]} onChange={(value) => setData(camelProperRateType, value)}>\r\n                        { _.map(HorseProperRate.properRate, (value, key) => (\r\n                          <Select.Option value={value}>{localization.site[key]}</Select.Option>\r\n                        ))}\r\n                      </Select>\r\n                    </div>\r\n                  </Col>\r\n                );\r\n              })}\r\n            </Row>\r\n          </>\r\n        ))}\r\n      </>\r\n    );\r\n  }\r\n}\r\n\r\nexport default HorseProperRate;\r\n","import _ from 'lodash';\r\nimport { InputNumber, Row, Col } from 'antd';\r\nimport React, { Component } from 'react';\r\n\r\nimport { LocalizationData } from '../../library/common';\r\n\r\nimport '../component.css';\r\n\r\ninterface IProps {\r\n  localization: LocalizationData;\r\n  setData: (key: string, value: any) => void,\r\n  state: { [key: string]: number },\r\n}\r\n\r\ninterface IState {\r\n}\r\n\r\nclass HorseStatData extends Component<IProps, IState> {\r\n  static readonly stats = {\r\n    speed: 'Speed',\r\n    stamina: 'Stamina',\r\n    pow: 'Power',\r\n    guts: 'Guts',\r\n    wiz: 'Wiz',\r\n  };\r\n\r\n  render() {\r\n    const { localization, setData, state } = this.props;\r\n    return (\r\n      <Row gutter={[8, 8]}>\r\n        { _.map(HorseStatData.stats, (value, key) => (\r\n          <Col span={4}>\r\n            <div className=\"flex\">\r\n              <span className=\"select-label\">{`${localization.site[value]}:`}</span>\r\n              <InputNumber className=\"select\" value={state[key]} min={1} max={1200} onChange={(data) => setData(key, data)} />\r\n            </div>\r\n          </Col>\r\n        ))}\r\n      </Row>\r\n    );\r\n  }\r\n}\r\n\r\nexport default HorseStatData;\r\n","import { RunningStyle } from '../common';\r\nimport Course from './course';\r\n\r\nexport enum ResultFlag {\r\n  FullLastSpurt,\r\n}\r\n\r\nexport enum Season {\r\n  Spring = '1',\r\n  Summer = '2',\r\n  Fall = '3',\r\n  Winter = '4',\r\n}\r\n\r\nexport enum Weather {\r\n  Sunny = '1',\r\n  Cloudy = '2',\r\n  Rainy = '3',\r\n  Snowy = '4',\r\n}\r\n\r\nexport interface RaceResultData {\r\n  time: number,\r\n  hpLeft: number,\r\n  resultFlags: Set<ResultFlag>,\r\n  skillsActivated: {\r\n    [key: string]: {\r\n      count: number,\r\n    },\r\n  },\r\n  temptation: {\r\n    triggered: boolean,\r\n    time: number,\r\n  },\r\n}\r\n\r\nexport interface IRaceHorse {\r\n  get course(): Course;\r\n  get season(): Season;\r\n  get weather(): Weather;\r\n  get postNumber(): number;\r\n  get popularity(): number;\r\n  get sameRunningStyleCount(): number;\r\n  get popularityFirstRunningStyle(): RunningStyle;\r\n  get runningStyle(): RunningStyle;\r\n}\r\n\r\nclass Common {\r\n}\r\n\r\nexport default Common;\r\n","import React, { Component } from 'react';\r\n\r\nimport { LocalizationData } from '../../library/common';\r\nimport HorseProperRate from './horse-proper-rate';\r\nimport HorseStatData from './horse-stat-data';\r\n\r\ninterface IProps {\r\n  localization: LocalizationData,\r\n  setData: (key: string, value: any) => void,\r\n  state: any,\r\n}\r\n\r\ninterface IState {\r\n}\r\n\r\nclass HorseData extends Component<IProps, IState> {\r\n  constructor(props: IProps) {\r\n    super(props);\r\n  }\r\n\r\n  render() {\r\n    const { localization, setData, state } = this.props;\r\n    return (\r\n      <>\r\n        <HorseStatData localization={localization} setData={setData} state={state} />\r\n        <HorseProperRate localization={localization} setData={setData} state={state} />\r\n      </>\r\n    );\r\n  }\r\n}\r\n\r\nexport default HorseData;\r\n","import {\r\n  Row, Col, Select,\r\n} from 'antd';\r\nimport React, { Component } from 'react';\r\n\r\nimport {\r\n  GroundStatus, LocalizationData, RunningStyle,\r\n} from '../../library/common';\r\n\r\nimport 'antd/dist/antd.css';\r\nimport '../component.css';\r\n\r\nconst { Option } = Select;\r\n\r\ninterface IProps {\r\n  localization: LocalizationData,\r\n  setData: (key: string, value: any) => void,\r\n  state: {\r\n    strategy?: string,\r\n    groundStatus?: string,\r\n  },\r\n}\r\n\r\ninterface IState {\r\n}\r\n\r\nclass RaceData extends Component<IProps, IState> {\r\n  constructor(props: IProps) {\r\n    super(props);\r\n    this.state = {\r\n    };\r\n  }\r\n\r\n  getStrategyComponent() {\r\n    const { localization, setData, state } = this.props;\r\n    const { strategy } = state;\r\n    return (\r\n      <Col span={4}>\r\n        <div className=\"flex\">\r\n          <span className=\"select-label\">{`${localization.site.Strategy}:`}</span>\r\n          <Select className=\"select\" value={strategy} onChange={(value) => setData('strategy', value)}>\r\n            <Option value={RunningStyle.Nige}>{localization.site.RunningStyleNige}</Option>\r\n            <Option value={RunningStyle.Senko}>{localization.site.RunningStyleSenko}</Option>\r\n            <Option value={RunningStyle.Sashi}>{localization.site.RunningStyleSashi}</Option>\r\n            <Option value={RunningStyle.Oikomi}>{localization.site.RunningStyleOikomi}</Option>\r\n          </Select>\r\n        </div>\r\n      </Col>\r\n    );\r\n  }\r\n\r\n  getGroundStatusComponent() {\r\n    const { localization, setData, state } = this.props;\r\n    const { groundStatus } = state;\r\n    return (\r\n      <Col span={4}>\r\n        <div className=\"flex\">\r\n          <span className=\"select-label\">{`${localization.site.GroundStatus}:`}</span>\r\n          <Select className=\"select\" value={groundStatus} onChange={(value) => setData('groundStatus', value)}>\r\n            <Option value={GroundStatus.Good}>{localization.site.GroundStatusGood}</Option>\r\n            <Option value={GroundStatus.SlightlyHeavy}>{localization.site.GroundStatusSlightlyHeavy}</Option>\r\n            <Option value={GroundStatus.Heavy}>{localization.site.GroundStatusHeavy}</Option>\r\n            <Option value={GroundStatus.Bad}>{localization.site.GroundStatusBad}</Option>\r\n          </Select>\r\n        </div>\r\n      </Col>\r\n    );\r\n  }\r\n\r\n  render() {\r\n    const strategyComponent = this.getStrategyComponent();\r\n    const groundStatusComponent = this.getGroundStatusComponent();\r\n\r\n    return (\r\n      <Row gutter={[8, 8]}>\r\n        {strategyComponent}\r\n        {groundStatusComponent}\r\n      </Row>\r\n    );\r\n  }\r\n}\r\n\r\nexport default RaceData;\r\n","import {\r\n  RunningStyle, CoursePhase, GroundType, GroundStatus,\r\n} from '../common';\r\n\r\nconst constant = {\r\n  baseDistance: 2000,\r\n  minSpeed: {\r\n    minSpeedRate: 0.85,\r\n    minSpeedGutsCoefSqrt: 200,\r\n    minSpeedGutsCoef: 0.001,\r\n  },\r\n  startDash: {\r\n    targetSpeedCoefficient: 0.85,\r\n    startAccelAdd: 24,\r\n  },\r\n  targetSpeed: {\r\n    baseTargetSpeedRandomMinusVal1: -0.0065,\r\n    baseTargetSpeedRandomMinusVal2: 5500,\r\n    baseTargetSpeedRandomPlusVal1: 5500,\r\n    baseTargetSpeedRandomLogCoefficient: 0.1,\r\n    baseTargetSpeedRandomCoefficient: 0.01,\r\n    targetSpeedCoefficient: {\r\n      [RunningStyle.Nige]: {\r\n        [CoursePhase.Start]: 1,\r\n        [CoursePhase.Middle]: 0.98,\r\n        [CoursePhase.End]: 0.98,\r\n        [CoursePhase.LastSpurt]: 0.98,\r\n      },\r\n      [RunningStyle.Senko]: {\r\n        [CoursePhase.Start]: 0.978,\r\n        [CoursePhase.Middle]: 0.991,\r\n        [CoursePhase.End]: 0.975,\r\n        [CoursePhase.LastSpurt]: 0.975,\r\n      },\r\n      [RunningStyle.Sashi]: {\r\n        [CoursePhase.Start]: 0.938,\r\n        [CoursePhase.Middle]: 0.998,\r\n        [CoursePhase.End]: 0.994,\r\n        [CoursePhase.LastSpurt]: 0.994,\r\n      },\r\n      [RunningStyle.Oikomi]: {\r\n        [CoursePhase.Start]: 0.931,\r\n        [CoursePhase.Middle]: 1,\r\n        [CoursePhase.End]: 1,\r\n        [CoursePhase.LastSpurt]: 1,\r\n      },\r\n    },\r\n    phaseEndBaseTargetSpeedCoef: 500,\r\n    addSpeedParamCoef: 0.002,\r\n    baseTargetSpeedCoef: 1.05,\r\n    lastSpurtBaseTargetSpeedAddCoef: 0.01,\r\n    lastSpurtTargetSpeedCoefSqrt: 500,\r\n    upSlopeAddSpeedVal1: 200,\r\n    downSlopeAddSpeedVal1: 0.3,\r\n    downSlopeAddSpeedVal2: 10,\r\n    firstBlockSlowStyles: [RunningStyle.Sashi, RunningStyle.Oikomi],\r\n    lastSpurtTargetSpeedStep: 0.1,\r\n  },\r\n  accel: {\r\n    accelPhaseCoef: {\r\n      [RunningStyle.Nige]: {\r\n        [CoursePhase.Start]: 1,\r\n        [CoursePhase.Middle]: 1,\r\n        [CoursePhase.End]: 0.996,\r\n        [CoursePhase.LastSpurt]: 0.996,\r\n      },\r\n      [RunningStyle.Senko]: {\r\n        [CoursePhase.Start]: 0.985,\r\n        [CoursePhase.Middle]: 1,\r\n        [CoursePhase.End]: 0.996,\r\n        [CoursePhase.LastSpurt]: 0.996,\r\n      },\r\n      [RunningStyle.Sashi]: {\r\n        [CoursePhase.Start]: 0.975,\r\n        [CoursePhase.Middle]: 1,\r\n        [CoursePhase.End]: 1,\r\n        [CoursePhase.LastSpurt]: 1,\r\n      },\r\n      [RunningStyle.Oikomi]: {\r\n        [CoursePhase.Start]: 0.945,\r\n        [CoursePhase.Middle]: 1,\r\n        [CoursePhase.End]: 0.997,\r\n        [CoursePhase.LastSpurt]: 0.997,\r\n      },\r\n    },\r\n    accelPowCoef: 0.0006,\r\n    accelPowCoefUpSlope: 0.0004,\r\n    accelPowCoefSqrt: 500,\r\n    startAccelAdd: 24,\r\n    accelDecreaseCoef: {\r\n      [CoursePhase.Start]: -1.2,\r\n      [CoursePhase.Middle]: -0.8,\r\n      [CoursePhase.End]: 1.2,\r\n      [CoursePhase.LastSpurt]: 1.2,\r\n    },\r\n    accelDecreaseZeroHpCoef: -1.2,\r\n  },\r\n  hp: {\r\n    hpInitialVal1: 0.8,\r\n    hpMaxCoef: {\r\n      [RunningStyle.Nige]: 0.95,\r\n      [RunningStyle.Senko]: 0.89,\r\n      [RunningStyle.Sashi]: 1.0,\r\n      [RunningStyle.Oikomi]: 0.995,\r\n    },\r\n    hpDecBase: 20,\r\n    hpDecRateBaseNormal: 1,\r\n    hpDecRateBaseTemptation: 1.6,\r\n    hpDecRateBasePositionKeepPaseDown: 0.6,\r\n    hpDecRateMultiplyDownSlopeAccelMode: 0.4,\r\n    speedGapParam1: 12,\r\n    speedGapParam1Pow: 144,\r\n    groundModifierMultiHpSub: {\r\n      [GroundType.Turf]: {\r\n        [GroundStatus.Good]: 1,\r\n        [GroundStatus.SlightlyHeavy]: 1,\r\n        [GroundStatus.Heavy]: 1.02,\r\n        [GroundStatus.Bad]: 1.02,\r\n      },\r\n      [GroundType.Dirt]: {\r\n        [GroundStatus.Good]: 1,\r\n        [GroundStatus.SlightlyHeavy]: 1,\r\n        [GroundStatus.Heavy]: 1.01,\r\n        [GroundStatus.Bad]: 1.02,\r\n      },\r\n    },\r\n    hpGutsBase: 1,\r\n    hpGutsCoef: 200,\r\n    hpGutsCoefSqrt: 600,\r\n  },\r\n  course: {\r\n    distanceTargetSpeedCoefficient: 0.001,\r\n    blockPortion: 1 / 24,\r\n    distanceShort: { min: 0, max: 1400 },\r\n    distanceMile: { min: 1401, max: 1800 },\r\n    distanceMiddle: { min: 1801, max: 2400 },\r\n    distanceLong: { min: 2401, max: Number.MAX_VALUE },\r\n    startSpeed: 3,\r\n    phaseStart: 1 / 6,\r\n    phaseMiddle: 4 / 6,\r\n    phaseEnd: 5 / 6,\r\n    positionSense: 10 / 24,\r\n    frameTime: 1 / 15,\r\n    gateTimeRange: { min: 0, max: 0.1 },\r\n    finishTimeCoef: 1.18,\r\n  },\r\n  lastSpurt: {\r\n    determineRateBase: 0.15,\r\n    determineRateWizMultiplier: 0.0005,\r\n    targetDistanceFromGoal: 60,\r\n  },\r\n  slope: {\r\n    downSlopeAccelModeChanceBase: 0.0004,\r\n    downSlopeEndChance: 0.2,\r\n  },\r\n  skill: {\r\n    activatePerMin: 0.2,\r\n    lotActivatePerVal1: 1,\r\n    lotActivatePerVal2: 90,\r\n    abilityTimeDivideDistance: 1000,\r\n    coolDownTimeDivideDistance: 1000,\r\n  },\r\n};\r\n\r\nexport default constant;\r\n","import _ from 'lodash';\r\nimport nr from 'newton-raphson-method';\r\nimport util from 'util';\r\n\r\nimport constant from './constant';\r\nimport Course from './course';\r\nimport Horse, { HorseStat } from './horse';\r\nimport Skill from './skill';\r\nimport {\r\n  RaceResultData, ResultFlag, Season, Weather, IRaceHorse,\r\n} from './common';\r\nimport {\r\n  RunningStyle, CoursePhase, SkillEffectData, SkillData, SkillAbilityData, SkillAbilityTargetType, SkillAbilityType,\r\n} from '../common';\r\n\r\nimport distanceProperRateJson from '../../db/proper_rate/distance.json';\r\nimport groundProperRateJson from '../../db/proper_rate/ground.json';\r\nimport runningStyleProperRateJson from '../../db/proper_rate/running_style.json';\r\n\r\nconst distanceProperRate = distanceProperRateJson as { [key: string]: { speed: number, power: number } };\r\nconst groundProperRate = groundProperRateJson as { [key: string]: number };\r\nconst runningStyleProperRate = runningStyleProperRateJson as { [key: string]: number };\r\n\r\nenum BreakPoint {\r\n  Goal = '0000',\r\n\r\n  FinishFirstBlock = '1000',\r\n  FinishPhaseStart = '1010',\r\n  FinishPhaseMiddle = '1020',\r\n  FinishPhaseEnd = '1030',\r\n  FinishPhaseLastSpurt = '1040',\r\n\r\n  LastSpurt = '2000',\r\n  PositionSense = '2010',\r\n  TriggerSkill = '2020',\r\n  DownSlopeAccelMode = '2030',\r\n  ZeroHp = '2040',\r\n\r\n  FinishBlock = '3000',\r\n  Slope = '3010',\r\n\r\n  None = '9999',\r\n}\r\n\r\ninterface BreakPointData {\r\n  distance?: number,\r\n  time?: number,\r\n  parameters?: any\r\n}\r\n\r\ninterface BreakPointSet {\r\n  [BreakPoint.FinishFirstBlock]?: BreakPointData,\r\n  [BreakPoint.FinishPhaseStart]?: BreakPointData,\r\n  [BreakPoint.FinishPhaseMiddle]?: BreakPointData,\r\n  [BreakPoint.FinishPhaseEnd]?: BreakPointData,\r\n  [BreakPoint.FinishPhaseLastSpurt]?: BreakPointData,\r\n\r\n  [BreakPoint.LastSpurt]?: BreakPointData,\r\n  [BreakPoint.PositionSense]?: BreakPointData,\r\n  [BreakPoint.TriggerSkill]?: BreakPointData[],\r\n  [BreakPoint.DownSlopeAccelMode]?: BreakPointData,\r\n  [BreakPoint.ZeroHp]?: BreakPointData,\r\n\r\n  [BreakPoint.FinishBlock]?: BreakPointData,\r\n  [BreakPoint.Slope]?: BreakPointData[],\r\n\r\n  [BreakPoint.Goal]?: BreakPointData,\r\n\r\n  [BreakPoint.None]?: BreakPointData,\r\n}\r\n\r\nenum Mode {\r\n  StartDash,\r\n  FirstBlock,\r\n  LastSpurt,\r\n  UpSlope,\r\n  DownSlopeAccel,\r\n  Temptation,\r\n  PositionKeepPaceDown,\r\n  ZeroHp,\r\n}\r\n\r\ninterface LastSpurtCandidate {\r\n  time: number,\r\n  targetSpeed: number,\r\n  lastSpurtDistance: number,\r\n}\r\n\r\nclass RaceHorse implements IRaceHorse {\r\n  private _course: Course;\r\n\r\n  private _horse: Horse;\r\n\r\n  private _runningStyle: RunningStyle;\r\n\r\n  private _season: Season;\r\n\r\n  private _weather: Weather;\r\n\r\n  private _postNumber: number;\r\n\r\n  private _popularity: number;\r\n\r\n  private _sameRunningStyleCount: number;\r\n\r\n  private _popularityFirstRunningStyle: RunningStyle;\r\n\r\n  private _statAddition: HorseStat;\r\n\r\n  private _stat: HorseStat;\r\n\r\n  private _generalSkills: SkillData[] = [];\r\n\r\n  private _activateCountSkills: SkillData[] = [];\r\n\r\n  private _skillCooldown: { [key: string]: number } = {};\r\n\r\n  private _speedWizRandomRange: [number, number] = [0, 0];\r\n\r\n  private _speedWizRandom: number = 0;\r\n\r\n  private _phase: CoursePhase = CoursePhase.Start;\r\n\r\n  private _mode: Set<Mode> = new Set<Mode>();\r\n\r\n  private _speed: number = 0;\r\n\r\n  private _lastSpurtTargetSpeed: number = 0;\r\n\r\n  private _hp: number = 0;\r\n\r\n  private _distance: number = 0;\r\n\r\n  private _time: number = 0;\r\n\r\n  private _breakPoints: BreakPointSet = {};\r\n\r\n  private _startDashTargetSpeed: number | undefined = undefined;\r\n\r\n  private _slopePer: number = 0;\r\n\r\n  raceResult: RaceResultData;\r\n\r\n  constructor({\r\n    horse, course, runningStyle, season, weather, postNumber, popularity, sameRunningStyle, popularityFirstRunningStyle,\r\n  }: {\r\n    horse: Horse,\r\n    course: Course,\r\n    runningStyle: RunningStyle,\r\n    season: Season,\r\n    weather: Weather,\r\n    postNumber: number;\r\n    popularity: number;\r\n    sameRunningStyle: number;\r\n    popularityFirstRunningStyle: RunningStyle,\r\n  }) {\r\n    this._horse = horse;\r\n    this._course = course;\r\n    this._runningStyle = runningStyle;\r\n    this._season = season;\r\n    this._weather = weather;\r\n    this._postNumber = postNumber;\r\n    this._popularity = popularity;\r\n    this._sameRunningStyleCount = sameRunningStyle;\r\n    this._popularityFirstRunningStyle = popularityFirstRunningStyle;\r\n    this._statAddition = {\r\n      speed: 0,\r\n      stamina: 0,\r\n      pow: 0,\r\n      guts: 0,\r\n      wiz: 0,\r\n    };\r\n    this._stat = _.clone(this._horse.stat);\r\n    this.raceResult = {\r\n      time: 0,\r\n      hpLeft: 0,\r\n      resultFlags: new Set<ResultFlag>(),\r\n      skillsActivated: {},\r\n      temptation: {\r\n        triggered: false,\r\n        time: 0,\r\n      },\r\n    };\r\n  }\r\n\r\n  get course(): Course {\r\n    return this._course;\r\n  }\r\n\r\n  get season(): Season {\r\n    return this._season;\r\n  }\r\n\r\n  get weather(): Weather {\r\n    return this._weather;\r\n  }\r\n\r\n  get postNumber(): number {\r\n    return this._postNumber;\r\n  }\r\n\r\n  get popularity(): number {\r\n    return this._popularity;\r\n  }\r\n\r\n  get sameRunningStyleCount(): number {\r\n    return this._sameRunningStyleCount;\r\n  }\r\n\r\n  get popularityFirstRunningStyle(): RunningStyle {\r\n    return this._popularityFirstRunningStyle;\r\n  }\r\n\r\n  get runningStyle(): RunningStyle {\r\n    return this._runningStyle;\r\n  }\r\n\r\n  get maxHp(): number {\r\n    return this._course.distance + this.stat.stamina * constant.hp.hpMaxCoef[this._runningStyle] * constant.hp.hpInitialVal1;\r\n  }\r\n\r\n  private get hp(): number {\r\n    return this._hp;\r\n  }\r\n\r\n  private get time(): number {\r\n    return this._time;\r\n  }\r\n\r\n  private get lastSpurtDetermineRate(): number {\r\n    return constant.lastSpurt.determineRateBase + constant.lastSpurt.determineRateWizMultiplier * this.stat.wiz;\r\n  }\r\n\r\n  private get originalStat(): HorseStat {\r\n    return this._horse.stat;\r\n  }\r\n\r\n  private get stat(): HorseStat {\r\n    return this._stat;\r\n  }\r\n\r\n  private get skillActivateRate(): number {\r\n    return Math.max(constant.skill.activatePerMin, constant.skill.lotActivatePerVal1 - constant.skill.lotActivatePerVal2 / this.originalStat.wiz);\r\n  }\r\n\r\n  private get minSpeed(): number {\r\n    return this._course.baseTargetSpeed * constant.minSpeed.minSpeedRate\r\n      + Math.sqrt(this.stat.guts * constant.minSpeed.minSpeedGutsCoefSqrt) * constant.minSpeed.minSpeedGutsCoef;\r\n  }\r\n\r\n  private get startDashTargetSpeed(): number {\r\n    if (this._startDashTargetSpeed === undefined) {\r\n      this._startDashTargetSpeed = Math.max(this._course.baseTargetSpeed * constant.startDash.targetSpeedCoefficient, this.minSpeed);\r\n    }\r\n    return this._startDashTargetSpeed;\r\n  }\r\n\r\n  private get baseTargetSpeed(): number {\r\n    return this._course.baseTargetSpeed * constant.targetSpeed.targetSpeedCoefficient[this._runningStyle][this._phase];\r\n  }\r\n\r\n  private get baseTargetSpeedRandom(): number {\r\n    return this.baseTargetSpeed * this._speedWizRandom;\r\n  }\r\n\r\n  private get phaseEndTargetSpeedAddition(): number {\r\n    return Math.sqrt(constant.targetSpeed.phaseEndBaseTargetSpeedCoef * this.stat.speed)\r\n      * constant.targetSpeed.addSpeedParamCoef * distanceProperRate[this._horse.properRate.distanceType[this._course.distanceType]].speed;\r\n  }\r\n\r\n  private get maxLastSpurtTargetSpeed(): number {\r\n    return Math.max(\r\n      (this.baseTargetSpeed + this.phaseEndTargetSpeedAddition + constant.targetSpeed.lastSpurtBaseTargetSpeedAddCoef * this._course.baseTargetSpeed)\r\n          * constant.targetSpeed.baseTargetSpeedCoef\r\n        + this.phaseEndTargetSpeedAddition,\r\n      this.minSpeed,\r\n    );\r\n  }\r\n\r\n  private get lastSpurtTargetSpeed(): number {\r\n    return this._lastSpurtTargetSpeed;\r\n  }\r\n\r\n  private get realTargetSpeed(): number {\r\n    if (this._mode.has(Mode.StartDash) || this._mode.has(Mode.FirstBlock)) {\r\n      return this.startDashTargetSpeed;\r\n    }\r\n    if (this._mode.has(Mode.LastSpurt)) {\r\n      return this.lastSpurtTargetSpeed;\r\n    }\r\n\r\n    const slopePer = this._slopePer;\r\n    let slopeAdd = 0;\r\n    if (slopePer >= 1) {\r\n      slopeAdd = -slopePer * constant.targetSpeed.upSlopeAddSpeedVal1 / this.stat.pow;\r\n    } else if (slopePer <= -1 && this._mode.has(Mode.DownSlopeAccel)) {\r\n      slopeAdd = constant.targetSpeed.downSlopeAddSpeedVal1 + Math.abs(slopePer) / constant.targetSpeed.downSlopeAddSpeedVal2;\r\n    }\r\n    return this.baseTargetSpeed + this.baseTargetSpeedRandom + slopeAdd\r\n      + (this._phase >= 2 ? this.phaseEndTargetSpeedAddition : 0);\r\n  }\r\n\r\n  get targetSpeed(): number {\r\n    if (this._mode.has(Mode.ZeroHp)) {\r\n      return this.minSpeed;\r\n    }\r\n    return Math.max(this.minSpeed, this.realTargetSpeed);\r\n  }\r\n\r\n  refreshSpeedRandomValue(): void {\r\n    this._speedWizRandom = _.random(...this._speedWizRandomRange, true);\r\n  }\r\n\r\n  private get baseAccel(): number {\r\n    return constant.accel.accelPhaseCoef[this._runningStyle][this._phase]\r\n      * Math.sqrt(this.stat.pow * constant.accel.accelPowCoefSqrt)\r\n      * groundProperRate[this._horse.properRate.groundType[this._course.groundType]]\r\n      * distanceProperRate[this._horse.properRate.distanceType[this._course.distanceType]].power;\r\n  }\r\n\r\n  get accel(): number {\r\n    if (this._mode.has(Mode.ZeroHp)) {\r\n      return constant.accel.accelDecreaseZeroHpCoef;\r\n    }\r\n\r\n    if (this._speed <= this.targetSpeed) {\r\n      return (this._mode.has(Mode.StartDash) ? constant.accel.startAccelAdd : 0)\r\n        + this.baseAccel * (this._mode.has(Mode.UpSlope) ? constant.accel.accelPowCoefUpSlope : constant.accel.accelPowCoef);\r\n    }\r\n    return constant.accel.accelDecreaseCoef[this._phase];\r\n  }\r\n\r\n  private get phaseEndHpDecreaseRate() {\r\n    return constant.hp.hpGutsBase + constant.hp.hpGutsCoef / Math.sqrt(constant.hp.hpGutsCoefSqrt * this.stat.guts);\r\n  }\r\n\r\n  private get modeHpDecreaseRate() {\r\n    if (this._mode.has(Mode.Temptation)) {\r\n      return constant.hp.hpDecRateBaseTemptation;\r\n    }\r\n    if (this._mode.has(Mode.PositionKeepPaceDown)) {\r\n      return constant.hp.hpDecRateBasePositionKeepPaseDown;\r\n    }\r\n    return constant.hp.hpDecRateBaseNormal;\r\n  }\r\n\r\n  get hpDecreaseRate(): number {\r\n    return constant.hp.hpDecBase * constant.hp.groundModifierMultiHpSub[this._course.groundType][this._course.groundStatus]\r\n      * (this._phase >= CoursePhase.End ? this.phaseEndHpDecreaseRate : 1)\r\n      * this.modeHpDecreaseRate\r\n      * (this._mode.has(Mode.DownSlopeAccel) ? constant.hp.hpDecRateMultiplyDownSlopeAccelMode : 1);\r\n  }\r\n\r\n  get minBreakpoint(): { breakPoint: BreakPoint, distance: number, parameters: any } {\r\n    let minKey: BreakPoint = BreakPoint.None;\r\n    let minDistance: number = Number.MAX_VALUE;\r\n    let minParameters: any;\r\n    for (const [key, value] of Object.entries(this._breakPoints)) {\r\n      let targetValue: BreakPointData;\r\n      if (Array.isArray(value)) {\r\n        targetValue = value[value.length - 1];\r\n      } else {\r\n        targetValue = value;\r\n      }\r\n\r\n      if (targetValue.distance !== undefined) {\r\n        if (targetValue.distance < minDistance) {\r\n          minDistance = targetValue.distance;\r\n          minKey = key as BreakPoint;\r\n          minParameters = targetValue.parameters;\r\n        } else if (targetValue.distance === minDistance && key < minKey) {\r\n          minKey = key as BreakPoint;\r\n          minParameters = targetValue.parameters;\r\n        }\r\n      } else if (targetValue.time !== undefined) {\r\n        const distance = this._distance + (targetValue.time - this._time) * this._speed;\r\n        if (distance < minDistance) {\r\n          minDistance = distance;\r\n          minKey = key as BreakPoint;\r\n          minParameters = targetValue.parameters;\r\n        } else if (targetValue.distance === minDistance && key < minKey) {\r\n          minKey = key as BreakPoint;\r\n          minParameters = targetValue.parameters;\r\n        }\r\n      }\r\n    }\r\n    return { breakPoint: minKey, distance: minDistance, parameters: minParameters };\r\n  }\r\n\r\n  private static getAccelHpDecrease({\r\n    initialSpeed, accel, time, hpDecreaseRate, baseTargetSpeed,\r\n  }: {\r\n    initialSpeed: number, accel: number, time: number, hpDecreaseRate: number, baseTargetSpeed: number,\r\n  }): number {\r\n    const speedCoefficient = (initialSpeed - baseTargetSpeed + constant.hp.speedGapParam1);\r\n    return hpDecreaseRate\r\n      * (accel ** 2 * time ** 3 / 3 + accel * time ** 2 * speedCoefficient + speedCoefficient ** 2 * time)\r\n      / constant.hp.speedGapParam1Pow;\r\n  }\r\n\r\n  private static getSpeedHpDecrease({ speed, hpDecreaseRate, baseTargetSpeed }: { speed: number, hpDecreaseRate: number, baseTargetSpeed: number }) {\r\n    return hpDecreaseRate * (speed - baseTargetSpeed + constant.hp.speedGapParam1) ** 2 / constant.hp.speedGapParam1Pow;\r\n  }\r\n\r\n  private static getRunHpDecrease({\r\n    speed, hpDecreaseRate, baseTargetSpeed, time,\r\n  }: {\r\n    speed: number, hpDecreaseRate: number, baseTargetSpeed: number, time: number,\r\n  }): number {\r\n    return RaceHorse.getSpeedHpDecrease({ speed, hpDecreaseRate, baseTargetSpeed }) * time;\r\n  }\r\n\r\n  private static accelToTargetSpeed({\r\n    accel, currentSpeed, targetSpeed, maxDistance, hpDecreaseRate, baseTargetSpeed,\r\n  }: {\r\n    accel: number,\r\n    currentSpeed: number,\r\n    targetSpeed: number,\r\n    maxDistance: number,\r\n    hpDecreaseRate: number,\r\n    baseTargetSpeed: number\r\n  }) {\r\n    const targetSpeedByDistanceSquare = currentSpeed ** 2 + 2 * accel * maxDistance;\r\n    const finalSpeed = accel > 0\r\n      ? Math.min(targetSpeed, Math.sqrt(targetSpeedByDistanceSquare))\r\n      : Math.max(targetSpeed, Math.sqrt(Math.max(targetSpeedByDistanceSquare, 0)));\r\n    const time = (finalSpeed - currentSpeed) / accel;\r\n    const distance = (currentSpeed + currentSpeed + accel * time) * time / 2;\r\n    const hpCost = RaceHorse.getAccelHpDecrease({\r\n      initialSpeed: currentSpeed,\r\n      accel,\r\n      time,\r\n      hpDecreaseRate,\r\n      baseTargetSpeed,\r\n    });\r\n    return {\r\n      time, distance, hpCost, finalSpeed,\r\n    };\r\n  }\r\n\r\n  private doGateOpen(): void {\r\n    this._time += Math.floor(_.random(constant.course.gateTimeRange.min, constant.course.gateTimeRange.max, true) / constant.course.frameTime)\r\n      * constant.course.frameTime;\r\n    this._mode.add(Mode.StartDash);\r\n    this._breakPoints[BreakPoint.FinishBlock] = { distance: this._course.blockDistance };\r\n    this._breakPoints[BreakPoint.Goal] = { distance: this._course.distance };\r\n  }\r\n\r\n  private finishStartDash(): void {\r\n    const { accel, targetSpeed } = this;\r\n    const {\r\n      time, distance, hpCost, finalSpeed,\r\n    } = RaceHorse.accelToTargetSpeed({\r\n      accel,\r\n      currentSpeed: this._speed,\r\n      targetSpeed,\r\n      maxDistance: this._course.distance,\r\n      hpDecreaseRate: this.hpDecreaseRate,\r\n      baseTargetSpeed: this._course.baseTargetSpeed,\r\n    });\r\n    this._time += time;\r\n    this._distance += distance;\r\n    this._hp -= hpCost;\r\n    this._speed = finalSpeed;\r\n\r\n    this._mode.delete(Mode.StartDash);\r\n    if (this._runningStyle === RunningStyle.Sashi || this._runningStyle === RunningStyle.Oikomi) {\r\n      this._breakPoints[BreakPoint.FinishFirstBlock] = { distance: this._course.blockDistance };\r\n      this._mode.add(Mode.FirstBlock);\r\n    } else {\r\n      this._breakPoints[BreakPoint.FinishPhaseStart] = { distance: this._course.phaseStartDistance };\r\n    }\r\n  }\r\n\r\n  private calculateAccelAndRun(distance: number) {\r\n    const { accel, targetSpeed } = this;\r\n    const {\r\n      time: accelTime, distance: accelDistance, hpCost: accelHpCost, finalSpeed,\r\n    } = RaceHorse.accelToTargetSpeed({\r\n      accel,\r\n      currentSpeed: this._speed,\r\n      targetSpeed,\r\n      maxDistance: distance - this._distance,\r\n      hpDecreaseRate: this.hpDecreaseRate,\r\n      baseTargetSpeed: this._course.baseTargetSpeed,\r\n    });\r\n\r\n    const runDistance = (distance - this._distance - accelDistance);\r\n    const runTime = runDistance / finalSpeed;\r\n    const runHpCost = RaceHorse.getRunHpDecrease({\r\n      speed: finalSpeed,\r\n      time: runTime,\r\n      hpDecreaseRate: this.hpDecreaseRate,\r\n      baseTargetSpeed: this._course.baseTargetSpeed,\r\n    });\r\n\r\n    return {\r\n      time: accelTime + runTime,\r\n      distance: accelDistance + runDistance,\r\n      hpCost: accelHpCost + runHpCost,\r\n      finalSpeed,\r\n    };\r\n  }\r\n\r\n  private doAccelAndRun(distance: number) {\r\n    const { accel, targetSpeed, hpDecreaseRate } = this;\r\n    const {\r\n      time: accelTime, distance: accelDistance, hpCost: accelHpCost, finalSpeed,\r\n    } = RaceHorse.accelToTargetSpeed({\r\n      accel,\r\n      currentSpeed: this._speed,\r\n      targetSpeed,\r\n      maxDistance: distance - this._distance,\r\n      hpDecreaseRate,\r\n      baseTargetSpeed: this._course.baseTargetSpeed,\r\n    });\r\n\r\n    if (accelHpCost > this.hp && !this._mode.has(Mode.ZeroHp)) {\r\n      /**\r\n       * Accel HP cost formula:\r\n       * hpDecrease = hpDecreaseRate * (accel^2 * time^3 / 3 + accel * time^2 * speedCoefficient + speedCoefficient^2 * time)/ 144\r\n       * speedCoefficient = initialSpeed - baseTargetSpeed + 12\r\n       * Given accel and initialSpeed, hpDecrease = this.hp is a cubic equation of time.\r\n       * It's hard to get a formula solution, but we can get a approximate value by applying Newton's Method.\r\n       */\r\n      const speedCoefficient = this._speed - this._course.baseTargetSpeed + constant.hp.speedGapParam1;\r\n      const realAccelTime = nr(\r\n        (time: number) => (\r\n          hpDecreaseRate * (accel ** 2 * time ** 3 / 3 + accel * time ** 2 * speedCoefficient + speedCoefficient ** 2 * time)\r\n        ),\r\n        (time: number) => (\r\n          hpDecreaseRate * (accel ** 2 * time ** 2 + accel * time * 2 * speedCoefficient + speedCoefficient ** 2)\r\n        ),\r\n        10,\r\n      );\r\n      const realAccelDistance = (this._speed + this._speed + accel * accelTime) * accelTime / 2;\r\n      this._time += realAccelTime;\r\n      this._distance += realAccelDistance;\r\n      this._hp = 0;\r\n      this._mode.add(Mode.ZeroHp);\r\n      delete this._breakPoints[BreakPoint.ZeroHp];\r\n      return false;\r\n    }\r\n\r\n    this._hp -= accelHpCost;\r\n    this._time += accelTime;\r\n    this._distance += accelDistance;\r\n    this._speed = finalSpeed;\r\n\r\n    const speedHpDecreaseRate = RaceHorse.getSpeedHpDecrease({\r\n      speed: this._speed,\r\n      hpDecreaseRate,\r\n      baseTargetSpeed: this._course.baseTargetSpeed,\r\n    });\r\n    const runDistance = distance - this._distance;\r\n    const runTime = runDistance / this._speed;\r\n    const runHpCost = speedHpDecreaseRate * runTime;\r\n\r\n    if (runHpCost > this.hp && !this._mode.has(Mode.ZeroHp)) {\r\n      const realRunTime = this._hp / speedHpDecreaseRate;\r\n      const realRunDistance = realRunTime * this._speed;\r\n      this._time += realRunTime;\r\n      this._distance += realRunDistance;\r\n      this._hp = 0;\r\n      this._mode.add(Mode.ZeroHp);\r\n      delete this._breakPoints[BreakPoint.ZeroHp];\r\n      return false;\r\n    }\r\n\r\n    this._hp -= runHpCost;\r\n    this._time += runTime;\r\n    this._distance += runDistance;\r\n    if (!this._mode.has(Mode.ZeroHp)) {\r\n      this._breakPoints[BreakPoint.ZeroHp] = { distance: this._distance + this.hp / speedHpDecreaseRate * this._speed };\r\n    }\r\n    return true;\r\n  }\r\n\r\n  private finishFirstBlock = () => {\r\n    this._mode.delete(Mode.FirstBlock);\r\n    this._breakPoints[BreakPoint.FinishPhaseStart] = { distance: this._course.phaseStartDistance };\r\n  };\r\n\r\n  private finishBlock = () => {\r\n    if (!this._mode.has(Mode.LastSpurt) && this._course.distance > this._distance) {\r\n      this.refreshSpeedRandomValue();\r\n      this._breakPoints[BreakPoint.FinishBlock] = { distance: this._distance + this._course.blockDistance };\r\n    }\r\n  };\r\n\r\n  private finishPhaseStart = () => {\r\n    this._phase = CoursePhase.Middle;\r\n    this._breakPoints[BreakPoint.FinishPhaseMiddle] = { distance: this._course.phaseMiddleDistance };\r\n  };\r\n\r\n  private static randomByCandidates(lastSpurtSpeedCandidates: LastSpurtCandidate[], determineRate: number): LastSpurtCandidate {\r\n    const randomNumber = Math.random();\r\n    const targetItem = Math.min(\r\n      lastSpurtSpeedCandidates.length - 1,\r\n      Math.floor(Math.log(randomNumber) / Math.log(1 - determineRate)),\r\n    );\r\n    return lastSpurtSpeedCandidates[targetItem];\r\n  }\r\n\r\n  private calculateLastSpurt = (): { lastSpurtDistance: number, lastSpurtTargetSpeed: number } => {\r\n    this._mode.add(Mode.LastSpurt);\r\n    this._lastSpurtTargetSpeed = this.maxLastSpurtTargetSpeed;\r\n    const { hpCost, finalSpeed } = this.calculateAccelAndRun(this._course.distance - constant.lastSpurt.targetDistanceFromGoal);\r\n    this._mode.delete(Mode.LastSpurt);\r\n    if (hpCost <= this._hp && finalSpeed === this._lastSpurtTargetSpeed) {\r\n      this.raceResult.resultFlags.add(ResultFlag.FullLastSpurt);\r\n      return {\r\n        lastSpurtDistance: this._distance,\r\n        lastSpurtTargetSpeed: finalSpeed,\r\n      };\r\n    }\r\n\r\n    let lastSpurtSpeedCandidates: LastSpurtCandidate[] = [];\r\n    const phaseEndBaseTargetSpeed = this.baseTargetSpeed + this.phaseEndTargetSpeedAddition;\r\n    const maxDistance = this._course.distance - this._distance - constant.lastSpurt.targetDistanceFromGoal;\r\n    const { accel, hpDecreaseRate } = this;\r\n    const { baseTargetSpeed } = this._course;\r\n    for (; this.lastSpurtTargetSpeed >= phaseEndBaseTargetSpeed; this._lastSpurtTargetSpeed -= constant.targetSpeed.lastSpurtTargetSpeedStep) {\r\n      const {\r\n        time: phaseEndAccelTime,\r\n        distance: phaseEndAccelDistance,\r\n        hpCost: phaseEndAccelHpCost,\r\n        finalSpeed: phaseEndFinalSpeed,\r\n      } = RaceHorse.accelToTargetSpeed({\r\n        accel,\r\n        currentSpeed: this._speed,\r\n        targetSpeed: phaseEndBaseTargetSpeed,\r\n        maxDistance,\r\n        hpDecreaseRate,\r\n        baseTargetSpeed,\r\n      });\r\n      const {\r\n        time: lastSpurtAccelTime,\r\n        distance: lastSpurtAccelDistance,\r\n        hpCost: lastSpurtAccelHpCost,\r\n      } = RaceHorse.accelToTargetSpeed({\r\n        accel,\r\n        currentSpeed: phaseEndFinalSpeed,\r\n        targetSpeed: this.lastSpurtTargetSpeed,\r\n        maxDistance: maxDistance - phaseEndAccelDistance,\r\n        hpDecreaseRate,\r\n        baseTargetSpeed,\r\n      });\r\n      const runDistance = maxDistance - phaseEndAccelDistance - lastSpurtAccelDistance;\r\n      const phaseEndRunTime = runDistance / phaseEndBaseTargetSpeed;\r\n      const phaseEndRunHpCost = RaceHorse.getRunHpDecrease({\r\n        speed: phaseEndBaseTargetSpeed,\r\n        time: phaseEndRunTime,\r\n        hpDecreaseRate,\r\n        baseTargetSpeed,\r\n      });\r\n      const lastSpurtRunTime = runDistance / this.lastSpurtTargetSpeed;\r\n      const lastSpurtRunHpCost = RaceHorse.getRunHpDecrease({\r\n        speed: this.lastSpurtTargetSpeed,\r\n        time: lastSpurtRunTime,\r\n        hpDecreaseRate,\r\n        baseTargetSpeed,\r\n      });\r\n\r\n      if (this.hp >= phaseEndAccelHpCost + lastSpurtAccelHpCost + lastSpurtRunHpCost) {\r\n        lastSpurtSpeedCandidates.push({\r\n          lastSpurtDistance: this._distance,\r\n          targetSpeed: this.lastSpurtTargetSpeed,\r\n          time: phaseEndAccelTime + lastSpurtAccelTime + lastSpurtRunTime,\r\n        });\r\n      } else if (this.hp >= phaseEndAccelHpCost + lastSpurtAccelHpCost + phaseEndRunHpCost) {\r\n        const hpLeft = this.hp - (phaseEndAccelHpCost + lastSpurtAccelHpCost + phaseEndRunHpCost);\r\n        const hpDiff = lastSpurtRunHpCost - phaseEndRunHpCost;\r\n        lastSpurtSpeedCandidates.push({\r\n          lastSpurtDistance: this._distance + phaseEndAccelDistance + runDistance * (1 - hpLeft / hpDiff),\r\n          targetSpeed: this.lastSpurtTargetSpeed,\r\n          time: phaseEndAccelTime + lastSpurtAccelTime + (hpLeft / hpDiff) * lastSpurtRunTime + (1 - hpLeft / hpDiff) * phaseEndRunTime,\r\n        });\r\n      }\r\n    }\r\n    lastSpurtSpeedCandidates.push({\r\n      lastSpurtDistance: Number.MAX_VALUE,\r\n      targetSpeed: phaseEndBaseTargetSpeed,\r\n      time: Number.MAX_VALUE,\r\n    });\r\n    lastSpurtSpeedCandidates = _.sortBy(lastSpurtSpeedCandidates, ['time']);\r\n    const candidate = RaceHorse.randomByCandidates(lastSpurtSpeedCandidates, this.lastSpurtDetermineRate);\r\n    return {\r\n      lastSpurtDistance: candidate.lastSpurtDistance,\r\n      lastSpurtTargetSpeed: candidate.targetSpeed,\r\n    };\r\n  };\r\n\r\n  private finishPhaseMiddle = () => {\r\n    this._phase = CoursePhase.End;\r\n    const { lastSpurtDistance, lastSpurtTargetSpeed } = this.calculateLastSpurt();\r\n    this._breakPoints[BreakPoint.FinishPhaseEnd] = { distance: this._course.phaseEndDistance };\r\n    this._breakPoints[BreakPoint.LastSpurt] = { distance: lastSpurtDistance };\r\n    this._lastSpurtTargetSpeed = lastSpurtTargetSpeed;\r\n  };\r\n\r\n  private finishPhaseEnd = () => {\r\n    this._phase = CoursePhase.LastSpurt;\r\n    this._breakPoints[BreakPoint.FinishPhaseLastSpurt] = { distance: this._course.distance };\r\n  };\r\n\r\n  private doLastSpurt = () => {\r\n    this._mode.add(Mode.LastSpurt);\r\n    delete this._breakPoints[BreakPoint.FinishBlock];\r\n  };\r\n\r\n  private finishLastSpurt = () => {};\r\n\r\n  private triggerPositionSense = () => {};\r\n\r\n  private zeroHp = () => {\r\n    if (this.hp <= 0) {\r\n      this._mode.add(Mode.ZeroHp);\r\n    }\r\n  };\r\n\r\n  private changeSlope = ({ slopePer }: { slopePer: number }) => {\r\n    if (this._slopePer > -1 && slopePer <= -1) {\r\n      this.checkDownSlopeAccelMode();\r\n    } else if (this._slopePer <= -1 && slopePer > -1) {\r\n      this._mode.delete(Mode.DownSlopeAccel);\r\n      delete this._breakPoints[BreakPoint.DownSlopeAccelMode];\r\n    }\r\n    this._slopePer = slopePer;\r\n  };\r\n\r\n  private checkDownSlopeAccelMode = () => {\r\n    if (this._mode.has(Mode.DownSlopeAccel)) {\r\n      if (Math.random() <= constant.slope.downSlopeEndChance) {\r\n        this._mode.delete(Mode.DownSlopeAccel);\r\n      } else {\r\n        this._breakPoints[BreakPoint.DownSlopeAccelMode] = { time: this._time + 1 };\r\n      }\r\n    } else if (Math.random() <= this.stat.wiz * constant.slope.downSlopeAccelModeChanceBase) {\r\n      this._mode.add(Mode.DownSlopeAccel);\r\n      this._breakPoints[BreakPoint.DownSlopeAccelMode] = { time: this._time + 1 };\r\n    }\r\n  };\r\n\r\n  private applyEffect(effect: SkillEffectData) {\r\n    const targets: RaceHorse[] = [];\r\n    switch (effect.target_type) {\r\n      case SkillAbilityTargetType.Self:\r\n        targets.push(this);\r\n        break;\r\n      default:\r\n        break;\r\n    }\r\n\r\n    _.map(targets, (target) => {\r\n      switch (effect.ability_type) {\r\n        case SkillAbilityType.AddSpeed:\r\n          break;\r\n        case SkillAbilityType.AddStamina:\r\n          break;\r\n        case SkillAbilityType.AddPow:\r\n          break;\r\n        case SkillAbilityType.AddGuts:\r\n          break;\r\n        case SkillAbilityType.AddWiz:\r\n          break;\r\n        case SkillAbilityType.AddSight:\r\n          break;\r\n        case SkillAbilityType.AddHp:\r\n          break;\r\n        case SkillAbilityType.ExtendTemptation:\r\n          break;\r\n        case SkillAbilityType.AddTargetSpeed:\r\n          break;\r\n        case SkillAbilityType.AddLaneAccel:\r\n          break;\r\n        case SkillAbilityType.AddAccel:\r\n          break;\r\n      }\r\n    });\r\n  }\r\n\r\n  private activateAbility({ skillId, ability }: { skillId: string, ability: SkillAbilityData }) {\r\n    if (!(skillId in this.raceResult.skillsActivated)) {\r\n      this.raceResult.skillsActivated[skillId] = { count: 1 };\r\n    } else {\r\n      this.raceResult.skillsActivated[skillId].count += 1;\r\n    }\r\n\r\n    this._skillCooldown[skillId] = this._time + ability.cooldown_time;\r\n\r\n    for (const effect of ability.effects) {\r\n      this.applyEffect(effect);\r\n    }\r\n  }\r\n\r\n  private triggerSkill = () => {};\r\n\r\n  private reachGoal = () => {\r\n    this._breakPoints = {};\r\n  };\r\n\r\n  private readonly breakPointMap: { [key in BreakPoint]: (parameters: any) => void } = {\r\n    [BreakPoint.None]: () => {},\r\n    [BreakPoint.FinishFirstBlock]: this.finishFirstBlock,\r\n    [BreakPoint.FinishBlock]: this.finishBlock,\r\n    [BreakPoint.FinishPhaseStart]: this.finishPhaseStart,\r\n    [BreakPoint.FinishPhaseMiddle]: this.finishPhaseMiddle,\r\n    [BreakPoint.FinishPhaseEnd]: this.finishPhaseEnd,\r\n    [BreakPoint.LastSpurt]: this.doLastSpurt,\r\n    [BreakPoint.FinishPhaseLastSpurt]: this.finishLastSpurt,\r\n    [BreakPoint.PositionSense]: this.triggerPositionSense,\r\n    [BreakPoint.ZeroHp]: this.zeroHp,\r\n    [BreakPoint.Slope]: this.changeSlope,\r\n    [BreakPoint.DownSlopeAccelMode]: this.checkDownSlopeAccelMode,\r\n    [BreakPoint.TriggerSkill]: this.triggerSkill,\r\n    [BreakPoint.Goal]: this.reachGoal,\r\n  };\r\n\r\n  buildSlopeBreakPoints() {\r\n    const slopePers = this._course.allSlopePers;\r\n    for (let i = slopePers.length - 1; i > 0; i -= 1) {\r\n      this.addBreakPoint(BreakPoint.Slope, {\r\n        distance: slopePers[i].distance,\r\n        parameters: {\r\n          slopePer: slopePers[i].slope_per,\r\n        },\r\n      });\r\n    }\r\n  }\r\n\r\n  addBreakPoint(type: BreakPoint, data: BreakPointData) {\r\n    switch (type) {\r\n      case BreakPoint.TriggerSkill:\r\n      case BreakPoint.Slope:\r\n        if (!(type in this._breakPoints)) {\r\n          this._breakPoints[type] = [data];\r\n        } else {\r\n          this._breakPoints[type]?.push(data);\r\n        }\r\n        break;\r\n      default:\r\n        this._breakPoints[type] = data;\r\n        break;\r\n    }\r\n  }\r\n\r\n  removeBreakPoint(type: BreakPoint) {\r\n    switch (type) {\r\n      case BreakPoint.TriggerSkill:\r\n      case BreakPoint.Slope:\r\n        this._breakPoints[type]?.pop();\r\n        if (this._breakPoints[type]?.length === 0) {\r\n          delete this._breakPoints[type];\r\n        }\r\n        break;\r\n      default:\r\n        delete this._breakPoints[type];\r\n        break;\r\n    }\r\n  }\r\n\r\n  getSkillTriggerStat(skill: SkillData): { distances: number[], specific: boolean } {\r\n    const course = this._course;\r\n    return { distances: [], specific: false };\r\n  }\r\n\r\n  populateSkills() {\r\n    const { skillActivateRate } = this;\r\n    const generalTriggerDistances = new Set<number>();\r\n    const specificTriggerDistances = [];\r\n    for (const skill of this._horse.skills) {\r\n      if (Skill.matchBase(skill, this) && Math.random() <= skillActivateRate) {\r\n        if (skill.abilities[0].ability_time === -0.0001) {\r\n          this.activateAbility({ skillId: skill.id, ability: skill.abilities[0] });\r\n        } else {\r\n          const { distances, specific } = this.getSkillTriggerStat(skill);\r\n          if (specific) {\r\n            specificTriggerDistances.push({ distances, skill });\r\n          } else {\r\n            for (const distance of distances) {\r\n              generalTriggerDistances.add(distance);\r\n            }\r\n            this._generalSkills.push(skill);\r\n          }\r\n        }\r\n      }\r\n    }\r\n  }\r\n\r\n  simulate() {\r\n    this._speed = constant.course.startSpeed;\r\n    this._time = 0;\r\n    this._distance = 0;\r\n    this._hp = this.maxHp;\r\n    this._mode = new Set();\r\n    this._phase = CoursePhase.Start;\r\n    this._breakPoints = {};\r\n    this._statAddition = {\r\n      speed: 0,\r\n      stamina: 0,\r\n      pow: 0,\r\n      guts: 0,\r\n      wiz: 0,\r\n    };\r\n    this._stat = _.clone(this._horse.stat);\r\n    this._generalSkills = [];\r\n    this._activateCountSkills = [];\r\n    this._skillCooldown = {};\r\n\r\n    this.populateSkills();\r\n\r\n    const upperBound = (this.stat.wiz / constant.targetSpeed.baseTargetSpeedRandomPlusVal1) * constant.targetSpeed.baseTargetSpeedRandomCoefficient\r\n    * Math.log10(this.stat.wiz * constant.targetSpeed.baseTargetSpeedRandomLogCoefficient);\r\n    const lowerBound = constant.targetSpeed.baseTargetSpeedRandomMinusVal1\r\n      + (this.stat.wiz / constant.targetSpeed.baseTargetSpeedRandomPlusVal1) * constant.targetSpeed.baseTargetSpeedRandomCoefficient\r\n      * Math.log10(this.stat.wiz * constant.targetSpeed.baseTargetSpeedRandomLogCoefficient);\r\n    this._speedWizRandomRange = [lowerBound, upperBound];\r\n    this.refreshSpeedRandomValue();\r\n\r\n    this.buildSlopeBreakPoints();\r\n    this.doGateOpen();\r\n    this.debugOutput();\r\n    this.finishStartDash();\r\n    this.debugOutput();\r\n\r\n    while (Object.keys(this._breakPoints).length > 0) {\r\n      const { breakPoint, distance, parameters } = this.minBreakpoint;\r\n      if (this.doAccelAndRun(distance)) {\r\n        this.removeBreakPoint(breakPoint);\r\n        this.breakPointMap[breakPoint](parameters);\r\n      }\r\n      this.debugOutput();\r\n    }\r\n\r\n    this.raceResult.time = this._time;\r\n    this.raceResult.hpLeft = this._hp;\r\n  }\r\n\r\n  debugOutput() {\r\n    return;\r\n    const debugData = {\r\n      hp: this.hp,\r\n      speed: this._speed,\r\n      time: this._time,\r\n      distance: this._distance,\r\n      phase: this._phase,\r\n      mode: Array.from(this._mode),\r\n      breakPoints: util.inspect(this._breakPoints, { depth: null }),\r\n      slopePer: this._slopePer,\r\n    };\r\n    console.log(debugData);\r\n  }\r\n}\r\n\r\nexport default RaceHorse;\r\n","import React, { Component } from 'react';\r\n\r\nimport _ from 'lodash';\r\nimport Common, { CourseDataType, LocalizationData } from '../../library/common';\r\nimport constant from '../../library/race/constant';\r\nimport { RaceResultData, ResultFlag } from '../../library/race/common';\r\n\r\nimport '../component.css';\r\n\r\ninterface IProps {\r\n  localization: LocalizationData;\r\n  raceResults: RaceResultData[];\r\n  course?: CourseDataType,\r\n}\r\n\r\ninterface IState {\r\n}\r\n\r\nclass RaceResult extends Component<IProps, IState> {\r\n  constructor(props: IProps) {\r\n    super(props);\r\n  }\r\n\r\n  render() {\r\n    const { localization, raceResults, course } = this.props;\r\n    if (course === undefined || raceResults.length === 0) {\r\n      return (\r\n        <>\r\n        </>\r\n      );\r\n    }\r\n\r\n    const timeAverage = _.meanBy(raceResults, 'time');\r\n    const timeShown: string = (timeAverage * constant.course.finishTimeCoef > parseFloat(course.finish_time_min) / 10000)\r\n      ? Common.secondToTime(timeAverage * constant.course.finishTimeCoef)\r\n      : localization.site.TimeMin;\r\n\r\n    let timeDeviationSum = 0;\r\n    let fullLastSpurtCount = 0;\r\n    let hpLeftSum = 0;\r\n    for (const result of raceResults) {\r\n      timeDeviationSum += (result.time - timeAverage) ** 2;\r\n      if (result.resultFlags.has(ResultFlag.FullLastSpurt)) {\r\n        fullLastSpurtCount += 1;\r\n      }\r\n      hpLeftSum += result.hpLeft;\r\n    }\r\n    return (\r\n      <table>\r\n        <tr>\r\n          <th>{localization.site.TimeAverage}</th>\r\n          <th>{localization.site.TimeStandardDeviation}</th>\r\n          <th>{localization.site.TimeShown}</th>\r\n          <th>{localization.site.FullLastSpurtRate}</th>\r\n          <th>{localization.site.HpLeftAverage}</th>\r\n        </tr>\r\n        <tr>\r\n          <td>{timeAverage.toFixed(3)}</td>\r\n          <td>{Math.sqrt(timeDeviationSum / raceResults.length).toFixed(3)}</td>\r\n          <td>{timeShown}</td>\r\n          <td>{(fullLastSpurtCount / raceResults.length).toLocaleString('en', { style: 'percent' })}</td>\r\n          <td>{(hpLeftSum / raceResults.length).toFixed(3)}</td>\r\n        </tr>\r\n      </table>\r\n    );\r\n  }\r\n}\r\n\r\nexport default RaceResult;\r\n","import {\r\n  DistanceType, ProperRate, GroundType, RunningStyle, SkillData,\r\n} from '../common';\r\n\r\nexport interface HorseStat {\r\n  speed: number;\r\n  stamina: number;\r\n  pow: number;\r\n  guts: number;\r\n  wiz: number;\r\n}\r\n\r\nexport interface HorseProperRate {\r\n  distanceType: { [key in DistanceType]: ProperRate },\r\n  groundType: { [key in GroundType]: ProperRate },\r\n  runningStyle: { [key in RunningStyle]: ProperRate },\r\n}\r\n\r\nclass Horse {\r\n  stat: HorseStat;\r\n\r\n  properRate: HorseProperRate;\r\n\r\n  skills: SkillData[];\r\n\r\n  constructor(\r\n    { stat, properRate, skills }: {\r\n      stat: HorseStat,\r\n      properRate: HorseProperRate,\r\n      skills: SkillData[],\r\n    },\r\n  ) {\r\n    this.stat = stat;\r\n    this.properRate = properRate;\r\n    this.skills = skills;\r\n  }\r\n}\r\n\r\nexport default Horse;\r\n","import constant from './constant';\r\nimport {\r\n  DistanceType, GroundType, GroundStatus, CourseDataType, TurnType,\r\n} from '../common';\r\n\r\nclass Course {\r\n  private _courseData: CourseDataType;\r\n\r\n  groundStatus: GroundStatus;\r\n\r\n  static getDistanceType(distance: number): DistanceType {\r\n    if (distance >= constant.course.distanceShort.min && distance <= constant.course.distanceShort.max) {\r\n      return DistanceType.Short;\r\n    }\r\n    if (distance >= constant.course.distanceMile.min && distance <= constant.course.distanceMile.max) {\r\n      return DistanceType.Mile;\r\n    }\r\n    if (distance >= constant.course.distanceMiddle.min && distance <= constant.course.distanceMiddle.max) {\r\n      return DistanceType.Middle;\r\n    }\r\n    if (distance >= constant.course.distanceLong.min && distance <= constant.course.distanceLong.max) {\r\n      return DistanceType.Long;\r\n    }\r\n    return DistanceType.Long;\r\n  }\r\n\r\n  constructor({ courseData, groundStatus } : { courseData: CourseDataType, groundStatus: GroundStatus }) {\r\n    this._courseData = courseData;\r\n    this.groundStatus = groundStatus;\r\n  }\r\n\r\n  get distance(): number {\r\n    return this._courseData.distance;\r\n  }\r\n\r\n  get distanceType(): DistanceType {\r\n    return Course.getDistanceType(this.distance);\r\n  }\r\n\r\n  get groundType(): GroundType {\r\n    return this._courseData.ground;\r\n  }\r\n\r\n  get turnType(): TurnType {\r\n    return this._courseData.turn;\r\n  }\r\n\r\n  get blockDistance(): number {\r\n    return this.distance * constant.course.blockPortion;\r\n  }\r\n\r\n  get phaseStartDistance(): number {\r\n    return this.distance * constant.course.phaseStart;\r\n  }\r\n\r\n  get phaseMiddleDistance(): number {\r\n    return this.distance * constant.course.phaseMiddle;\r\n  }\r\n\r\n  get phaseEndDistance(): number {\r\n    return this.distance * constant.course.phaseEnd;\r\n  }\r\n\r\n  get positionSenseDistance(): number {\r\n    return this.distance * constant.course.positionSense;\r\n  }\r\n\r\n  get baseTargetSpeed(): number {\r\n    return 20 - (this.distance - constant.baseDistance) * constant.course.distanceTargetSpeedCoefficient;\r\n  }\r\n\r\n  get allSlopePers(): { distance: number, slope_per: number }[] {\r\n    return this._courseData.slope_per;\r\n  }\r\n\r\n  get trackId(): string {\r\n    return this._courseData.race_track_id;\r\n  }\r\n}\r\n\r\nexport default Course;\r\n","import {\r\n  SkillConditionObject, SkillConditionObjectFormula, SkillConditionObjectLogical, SkillConditionOperatorsFormula,\r\n} from '../common';\r\nimport { IRaceHorse } from './common';\r\n\r\nclass Skill {\r\n  static matchBase(condition: SkillConditionObject, raceHorse: IRaceHorse): boolean {\r\n    if (condition === {}) {\r\n      return true;\r\n    }\r\n\r\n    const realCondition = condition as SkillConditionObjectLogical | SkillConditionObjectFormula;\r\n    if (realCondition.operator === 'and') {\r\n      const andCondition = realCondition as SkillConditionObjectLogical;\r\n      for (const childCondition of andCondition.items) {\r\n        if (!Skill.matchBase(childCondition, raceHorse)) {\r\n          return false;\r\n        }\r\n      }\r\n      return true;\r\n    }\r\n\r\n    if (realCondition.operator === 'or') {\r\n      const orCondition = realCondition as SkillConditionObjectLogical;\r\n      for (const childCondition of orCondition.items) {\r\n        if (Skill.matchBase(childCondition, raceHorse)) {\r\n          return true;\r\n        }\r\n      }\r\n      return false;\r\n    }\r\n\r\n    const formulaCondition = realCondition as SkillConditionObjectFormula;\r\n    const targetValue = Skill.getTargetValue(formulaCondition, raceHorse);\r\n    if (typeof targetValue === 'boolean') {\r\n      return targetValue;\r\n    }\r\n\r\n    switch (formulaCondition.operator) {\r\n      case SkillConditionOperatorsFormula.GreaterThan:\r\n        return targetValue > parseFloat(formulaCondition.value);\r\n      case SkillConditionOperatorsFormula.GreaterThanOrEqualTo:\r\n        return targetValue >= parseFloat(formulaCondition.value);\r\n      case SkillConditionOperatorsFormula.LessThan:\r\n        return targetValue < parseFloat(formulaCondition.value);\r\n      case SkillConditionOperatorsFormula.LessThanOrEqualTo:\r\n        return targetValue <= parseFloat(formulaCondition.value);\r\n      case SkillConditionOperatorsFormula.EqualTo:\r\n        return targetValue === formulaCondition.value;\r\n      case SkillConditionOperatorsFormula.NotEqualTo:\r\n        return targetValue !== formulaCondition.value;\r\n      default:\r\n        return false;\r\n    }\r\n  }\r\n\r\n  static getTargetValue(condition: SkillConditionObjectFormula, raceHorse: IRaceHorse): string | number | boolean {\r\n    switch (condition.key) {\r\n      case 'rotation':\r\n        return raceHorse.course.turnType;\r\n      case 'track_id':\r\n        return raceHorse.course.trackId;\r\n      case 'is_basis_distance':\r\n        return raceHorse.course.distance % 400 === 0 ? '1' : '0';\r\n      case 'season':\r\n        return raceHorse.season;\r\n      case 'weather':\r\n        return raceHorse.weather;\r\n      case 'post_number':\r\n        return raceHorse.postNumber;\r\n      case 'running_style_count_same':\r\n        return raceHorse.sameRunningStyleCount;\r\n      case 'running_style_equal_popularity_one':\r\n        return raceHorse.popularityFirstRunningStyle === raceHorse.runningStyle ? '1' : '0';\r\n      case 'popularity':\r\n        return raceHorse.popularity;\r\n      case 'grade':\r\n        // TODO\r\n        return true;\r\n      case 'running_style':\r\n        return raceHorse.runningStyle;\r\n      case 'random_lot':\r\n        // Verification needed.\r\n        return Math.random() * 100 <= parseFloat(condition.value);\r\n      case 'same_skill_horse_count':\r\n        // TODO\r\n        return true;\r\n      default:\r\n        return true;\r\n    }\r\n  }\r\n}\r\n\r\nexport default Skill;\r\n","import _ from 'lodash';\r\nimport {\r\n  Button, Col, InputNumber, Row, Progress,\r\n} from 'antd';\r\nimport React, { Component } from 'react';\r\nimport Promise from 'bluebird';\r\n\r\nimport {\r\n  CourseDataType, DistanceType, GroundStatus, GroundType, LocalizationData, RunningStyle, SkillData,\r\n} from '../../library/common';\r\nimport { RaceResultData, Season, Weather } from '../../library/race/common';\r\nimport {\r\n  IHorseState, IGroundProperRate, IDistanceProperRate, IRunningStyleProperRate,\r\n} from './common';\r\nimport Horse from '../../library/race/horse';\r\nimport Course from '../../library/race/course';\r\nimport RaceHorse from '../../library/race/race-horse';\r\n\r\nimport skillJson from '../../db/skill.json';\r\n\r\nimport 'antd/dist/antd.css';\r\nimport '../component.css';\r\n\r\nconst skillData = skillJson as { [key: string]: SkillData };\r\n\r\ninterface SimulatorState extends IHorseState, IGroundProperRate, IDistanceProperRate, IRunningStyleProperRate {\r\n  strategy?: string,\r\n  groundStatus?: string,\r\n\r\n  racecourse?: string,\r\n  ground?: string,\r\n  distance?: number,\r\n  course?: CourseDataType,\r\n\r\n  skills?: string[],\r\n}\r\n\r\ninterface IProps {\r\n  localization: LocalizationData;\r\n  setData: (key: string, value: any) => void,\r\n  state: SimulatorState,\r\n}\r\n\r\ninterface IState {\r\n  running: boolean,\r\n  finished: number,\r\n  rounds: number,\r\n}\r\n\r\nclass SimulatorCalculator extends Component<IProps, IState> {\r\n  static readonly concurrency = 50;\r\n\r\n  constructor(props: IProps) {\r\n    super(props);\r\n    this.state = {\r\n      running: false,\r\n      rounds: 1000,\r\n      finished: 0,\r\n    };\r\n  }\r\n\r\n  calculate = async () => {\r\n    this.setState({\r\n      running: true,\r\n      finished: 0,\r\n    });\r\n    const { state, setData } = this.props;\r\n    const {\r\n      speed, stamina, pow, guts, wiz,\r\n      strategy, groundStatus, course,\r\n      skills,\r\n      groundTypeTurf, groundTypeDirt,\r\n      distanceTypeShort, distanceTypeMile, distanceTypeMiddle, distanceTypeLong,\r\n      runningStyleNige, runningStyleSenko, runningStyleSashi, runningStyleOikomi,\r\n    } = state;\r\n    const { rounds } = this.state;\r\n\r\n    const targetCourse = new Course({\r\n      courseData: course as CourseDataType,\r\n      groundStatus: groundStatus as GroundStatus,\r\n    });\r\n    const targetHorse = new Horse({\r\n      stat: {\r\n        speed, stamina, pow, guts, wiz,\r\n      },\r\n      properRate: {\r\n        groundType: {\r\n          [GroundType.Turf]: groundTypeTurf,\r\n          [GroundType.Dirt]: groundTypeDirt,\r\n        },\r\n        distanceType: {\r\n          [DistanceType.Short]: distanceTypeShort,\r\n          [DistanceType.Mile]: distanceTypeMile,\r\n          [DistanceType.Middle]: distanceTypeMiddle,\r\n          [DistanceType.Long]: distanceTypeLong,\r\n        },\r\n        runningStyle: {\r\n          [RunningStyle.Nige]: runningStyleNige,\r\n          [RunningStyle.Senko]: runningStyleSenko,\r\n          [RunningStyle.Sashi]: runningStyleSashi,\r\n          [RunningStyle.Oikomi]: runningStyleOikomi,\r\n        },\r\n      },\r\n      skills: _.map(skills, (skillId) => (skillData[skillId])),\r\n    });\r\n\r\n    let counter = 0;\r\n    let started = 0;\r\n    const worksPerThread = Math.ceil(rounds / SimulatorCalculator.concurrency);\r\n    const raceResults: RaceResultData[] = [];\r\n    await Promise.map(\r\n      new Array(SimulatorCalculator.concurrency),\r\n      async () => {\r\n        const raceHorse = new RaceHorse({\r\n          horse: targetHorse,\r\n          course: targetCourse,\r\n          runningStyle: strategy as RunningStyle,\r\n          season: Season.Spring,\r\n          weather: Weather.Sunny,\r\n          postNumber: 1,\r\n          popularity: 1,\r\n          sameRunningStyle: 0,\r\n          popularityFirstRunningStyle: strategy as RunningStyle,\r\n        });\r\n        for (let i = 0; i < worksPerThread && started < rounds; i += 1) {\r\n          started += 1;\r\n          raceHorse.simulate();\r\n          raceResults.push(raceHorse.raceResult);\r\n          counter += 1;\r\n          this.setState({ finished: counter });\r\n          await Promise.delay(0);\r\n        }\r\n      },\r\n      { concurrency: SimulatorCalculator.concurrency },\r\n    );\r\n    this.setState({ running: false });\r\n    setData('raceResults', raceResults);\r\n  };\r\n\r\n  render() {\r\n    const { localization, state } = this.props;\r\n    const { course } = state;\r\n    const { finished, rounds, running } = this.state;\r\n    const progressPercent = _.round(finished / rounds * 100, 1);\r\n    return (\r\n      <Row gutter={[8, 8]}>\r\n        <Col span={4}>\r\n          <div className=\"flex\">\r\n            <span className=\"select-label\">{`${localization.site.SimulatorCalculateRounds}:`}</span>\r\n            <InputNumber\r\n              className=\"select\"\r\n              value={rounds}\r\n              min={1}\r\n              max={1000}\r\n              onChange={(value) => this.setState({ rounds: value })}\r\n            />\r\n            <Button\r\n              className=\"select-label\"\r\n              type=\"primary\"\r\n              disabled={course === undefined || running}\r\n              onClick={this.calculate}\r\n            >\r\n              {localization.site.SimulatorCalculate}\r\n            </Button>\r\n            { running ? <Progress className=\"select-label\" percent={progressPercent} /> : null }\r\n          </div>\r\n        </Col>\r\n      </Row>\r\n    );\r\n  }\r\n}\r\n\r\nexport default SimulatorCalculator;\r\n","import _ from 'lodash';\r\nimport React, { Component } from 'react';\r\nimport { Row, Col, TreeSelect } from 'antd';\r\n\r\nimport { LocalizationData, SkillData } from '../../library/common';\r\n\r\nimport skillJson from '../../db/skill.json';\r\n\r\nimport 'antd/dist/antd.css';\r\nimport '../component.css';\r\n\r\ninterface SkillSelectorDefinition {\r\n  categoryName: string,\r\n  icon?: string,\r\n  sets: string[],\r\n  children?: SkillSelectorDefinition[],\r\n}\r\n\r\nconst SKILL_SELECTOR_HIERARCHY: SkillSelectorDefinition[] = [\r\n  {\r\n    categoryName: 'SkillPassive',\r\n    sets: ['10061'],\r\n    children: [\r\n      {\r\n        categoryName: 'Speed',\r\n        icon: '10011',\r\n        sets: ['10011'],\r\n      },\r\n      {\r\n        categoryName: 'Stamina',\r\n        icon: '10021',\r\n        sets: ['10021'],\r\n      },\r\n      {\r\n        categoryName: 'Power',\r\n        icon: '10031',\r\n        sets: ['10031'],\r\n      },\r\n      {\r\n        categoryName: 'Guts',\r\n        icon: '10041',\r\n        sets: ['10041'],\r\n      },\r\n      {\r\n        categoryName: 'Wiz',\r\n        icon: '10051',\r\n        sets: ['10051'],\r\n      },\r\n    ],\r\n  },\r\n  {\r\n    categoryName: 'SkillActive',\r\n    sets: [],\r\n    children: [\r\n      {\r\n        categoryName: 'SkillSpeed',\r\n        icon: '20011',\r\n        sets: ['20011', '20012'],\r\n      },\r\n      {\r\n        categoryName: 'SkillAccel',\r\n        icon: '20041',\r\n        sets: ['20041', '20042'],\r\n      },\r\n      {\r\n        categoryName: 'SkillHeal',\r\n        icon: '20021',\r\n        sets: ['20021', '20022'],\r\n      },\r\n      {\r\n        categoryName: 'SkillLane',\r\n        icon: '20051',\r\n        sets: ['20051', '20052'],\r\n      },\r\n      {\r\n        categoryName: 'SkillSight',\r\n        icon: '20091',\r\n        sets: ['20091', '20092'],\r\n      },\r\n      {\r\n        categoryName: 'SkillGate',\r\n        icon: '20061',\r\n        sets: ['20061', '20062'],\r\n      },\r\n    ],\r\n  },\r\n  {\r\n    categoryName: 'SkillDebuff',\r\n    sets: [],\r\n    children: [\r\n      {\r\n        categoryName: 'SkillSpeed',\r\n        icon: '30011',\r\n        sets: ['30011', '30012'],\r\n      },\r\n      {\r\n        categoryName: 'SkillTemptation',\r\n        icon: '30041',\r\n        sets: ['30041', '30042'],\r\n      },\r\n      {\r\n        categoryName: 'SkillHeal',\r\n        icon: '30051',\r\n        sets: ['30051', '30052'],\r\n      },\r\n      {\r\n        categoryName: 'SkillSight',\r\n        icon: '30071',\r\n        sets: ['30071', '30072'],\r\n      },\r\n    ],\r\n  },\r\n];\r\n\r\nconst { TreeNode } = TreeSelect;\r\nconst skillData = skillJson as { [key: string]: SkillData };\r\n\r\ninterface IProps {\r\n  localization: LocalizationData,\r\n  setData: (key: string, value: any) => void,\r\n  state: {\r\n  },\r\n}\r\n\r\ninterface IState {\r\n}\r\n\r\nclass SkillSelector extends Component<IProps, IState> {\r\n  private _skillSets: { [key: string]: SkillData[] } = {};\r\n\r\n  constructor(props: IProps) {\r\n    super(props);\r\n    this.state = {\r\n    };\r\n\r\n    for (const [, skill] of Object.entries(skillData)) {\r\n      if (!(skill.icon_id in this._skillSets)) {\r\n        this._skillSets[skill.icon_id] = [];\r\n      }\r\n\r\n      if (skill.rarity === 1 || skill.rarity === 2) {\r\n        this._skillSets[skill.icon_id].push(skill);\r\n      }\r\n    }\r\n  }\r\n\r\n  buildSkillTreeNodes(definitions: SkillSelectorDefinition[] | undefined, localization: LocalizationData): JSX.Element[] {\r\n    if (!definitions) {\r\n      return [];\r\n    }\r\n\r\n    return _.map(definitions, (definition) => {\r\n      let title: any = localization.site[definition.categoryName];\r\n      if ('icon' in definition) {\r\n        title = (\r\n          <span>\r\n            <img\r\n              className=\"skillIcon\"\r\n              src={`${process.env.PUBLIC_URL}/static/image/skill/${definition.icon}.png`}\r\n              alt={title}\r\n            />\r\n            {title}\r\n          </span>\r\n        );\r\n      }\r\n\r\n      let children: JSX.Element[] = [];\r\n      if ('children' in definition) {\r\n        children = this.buildSkillTreeNodes(definition.children, localization);\r\n      }\r\n\r\n      let skills: JSX.Element[] = [];\r\n      if ('sets' in definition) {\r\n        skills = _\r\n          .chain(definition.sets)\r\n          .map((set) => this._skillSets[set])\r\n          .filter((skillSet) => Array.isArray(skillSet))\r\n          .flatten()\r\n          .sortBy(['group_id', 'id'])\r\n          .map((skill) => (\r\n            <TreeNode\r\n              key={skill.id}\r\n              title={(\r\n                <span className={`skill_${skill.rarity}`}>\r\n                  <img\r\n                    className=\"skillIcon\"\r\n                    src={`${process.env.PUBLIC_URL}/static/image/skill/${skill.icon_id}.png`}\r\n                    alt={skill.name}\r\n                  />\r\n                  {skill.name}\r\n                </span>\r\n              )}\r\n              value={skill.id}\r\n            />\r\n          ))\r\n          .value();\r\n      }\r\n\r\n      return (\r\n        <TreeNode\r\n          key={definition.categoryName}\r\n          title={title}\r\n          value={0}\r\n          disabled\r\n        >\r\n          {children}\r\n          {skills}\r\n        </TreeNode>\r\n      );\r\n    });\r\n  }\r\n\r\n  render() {\r\n    const { localization, setData } = this.props;\r\n    return (\r\n      <Row gutter={[8, 8]}>\r\n        <Col span={24}>\r\n          <div className=\"flex\">\r\n            <span className=\"select-label\">{`${localization.site.SkillSelector}:`}</span>\r\n            <TreeSelect\r\n              dropdownPopupAlign={{\r\n                overflow: { adjustY: 0, adjustX: 0 },\r\n                offset: [0, 2],\r\n              }}\r\n              treeLine\r\n              allowClear\r\n              multiple\r\n              autoClearSearchValue\r\n              showCheckedStrategy={TreeSelect.SHOW_PARENT}\r\n              style={{\r\n                width: '100%',\r\n              }}\r\n              onChange={(value) => setData('skills', value)}\r\n            >\r\n              { this.buildSkillTreeNodes(SKILL_SELECTOR_HIERARCHY, localization) }\r\n            </TreeSelect>\r\n          </div>\r\n        </Col>\r\n      </Row>\r\n    );\r\n  }\r\n}\r\n\r\nexport default SkillSelector;\r\n","/* eslint-disable react/no-unused-state */\r\nimport React, { Component } from 'react';\r\n\r\nimport {\r\n  CourseCategory, CourseDataType, GroundStatus, GroundType, LocalizationData, ProperRate, RunningStyle,\r\n} from '../../library/common';\r\nimport {\r\n  IHorseState, IGroundProperRate, IDistanceProperRate, IRunningStyleProperRate,\r\n} from './common';\r\nimport CourseData from '../course-data';\r\nimport HorseData from './horse-data';\r\nimport RaceData from './race-data';\r\nimport RaceResult from './race-result';\r\nimport SimulatorCalculator from './simulator-calculator';\r\nimport SkillSelector from './skill-selector';\r\n\r\nimport 'antd/dist/antd.css';\r\nimport '../component.css';\r\nimport '../../app.css';\r\n\r\nimport courseJson from '../../db/course.json';\r\nimport { RaceResultData } from '../../library/race/common';\r\n\r\nconst courses = courseJson as CourseDataType[];\r\n\r\ninterface IProps {\r\n  localization: LocalizationData;\r\n}\r\n\r\ninterface IProperRate extends IGroundProperRate, IDistanceProperRate, IRunningStyleProperRate {\r\n}\r\n\r\ninterface IState extends IHorseState, IProperRate {\r\n  skills?: string[],\r\n\r\n  racecourse?: string,\r\n  ground?: GroundType,\r\n  distance?: number,\r\n  course?: CourseDataType,\r\n\r\n  strategy?: RunningStyle,\r\n  groundStatus?: GroundStatus,\r\n\r\n  raceResults: RaceResultData[],\r\n}\r\n\r\nclass Simulator extends Component<IProps, IState> {\r\n  private courseCategories: CourseCategory = {};\r\n\r\n  constructor(props: IProps) {\r\n    super(props);\r\n\r\n    this.loadCourseData();\r\n    this.state = {\r\n      speed: 1200,\r\n      stamina: 300,\r\n      pow: 1200,\r\n      guts: 300,\r\n      wiz: 300,\r\n\r\n      groundTypeTurf: ProperRate.A,\r\n      groundTypeDirt: ProperRate.A,\r\n\r\n      distanceTypeShort: ProperRate.A,\r\n      distanceTypeMile: ProperRate.A,\r\n      distanceTypeMiddle: ProperRate.A,\r\n      distanceTypeLong: ProperRate.A,\r\n\r\n      runningStyleNige: ProperRate.A,\r\n      runningStyleSenko: ProperRate.A,\r\n      runningStyleSashi: ProperRate.A,\r\n      runningStyleOikomi: ProperRate.A,\r\n\r\n      racecourse: '10009',\r\n      ground: GroundType.Turf,\r\n      distance: 2200,\r\n      course: this.courseCategories['10009'][GroundType.Turf][2200],\r\n\r\n      strategy: RunningStyle.Nige,\r\n      groundStatus: GroundStatus.Good,\r\n\r\n      raceResults: [],\r\n    };\r\n  }\r\n\r\n  updateCourse = () => {\r\n    const {\r\n      strategy, racecourse, ground, distance, groundStatus,\r\n    } = this.state;\r\n    let course;\r\n    if (racecourse !== undefined && ground !== undefined && distance !== undefined && strategy !== undefined && groundStatus !== undefined) {\r\n      if (ground in this.courseCategories[racecourse]) {\r\n        course = this.courseCategories[racecourse][ground][distance];\r\n      }\r\n    }\r\n    this.setState({ course });\r\n  };\r\n\r\n  setData = (key: string, value: any): void => {\r\n    switch (key) {\r\n      case 'racecourse':\r\n        this.setState({\r\n          racecourse: value,\r\n          ground: undefined,\r\n          distance: undefined,\r\n          course: undefined,\r\n        });\r\n        break;\r\n      case 'ground':\r\n        this.setState({\r\n          ground: value as GroundType,\r\n          distance: undefined,\r\n          course: undefined,\r\n        });\r\n        break;\r\n      case 'distance':\r\n      case 'strategy':\r\n      case 'groundStatus':\r\n        this.setState<'distance' | 'strategy' | 'groundStatus'>({ [key]: value }, this.updateCourse);\r\n        break;\r\n      case 'speed':\r\n      case 'stamina':\r\n      case 'pow':\r\n      case 'guts':\r\n      case 'wiz':\r\n        this.setState({ [key]: value as number } as Pick<IHorseState, keyof IHorseState>);\r\n        break;\r\n      case 'raceResults':\r\n        this.setState({ raceResults: value });\r\n        break;\r\n      case 'skills':\r\n        this.setState({ skills: value as string[] });\r\n        break;\r\n      default:\r\n        this.setState({ [key]: value } as Pick<IProperRate, keyof IProperRate>);\r\n        break;\r\n    }\r\n  };\r\n\r\n  loadCourseData() {\r\n    const { localization } = this.props;\r\n    for (const course of courses) {\r\n      if (!(course.race_track_id in this.courseCategories)) {\r\n        this.courseCategories[course.race_track_id] = {};\r\n      }\r\n      if (!(course.ground in this.courseCategories[course.race_track_id])) {\r\n        this.courseCategories[course.race_track_id][course.ground] = {};\r\n      }\r\n      this.courseCategories[course.race_track_id][course.ground][course.distance+\" \"+localization.course.inout[course.inout]] = course;\r\n    }\r\n  }\r\n\r\n  render() {\r\n    const { localization } = this.props;\r\n    const { raceResults, course } = this.state;\r\n    return (\r\n      <div className=\"content\">\r\n        <HorseData\r\n          localization={localization}\r\n          setData={this.setData}\r\n          state={this.state}\r\n        />\r\n        <SkillSelector\r\n          localization={localization}\r\n          setData={this.setData}\r\n          state={this.state}\r\n        />\r\n        <CourseData\r\n          localization={localization}\r\n          courseCategories={this.courseCategories}\r\n          setData={this.setData}\r\n          state={this.state}\r\n        />\r\n        <RaceData\r\n          localization={localization}\r\n          setData={this.setData}\r\n          state={this.state}\r\n        />\r\n        <SimulatorCalculator\r\n          localization={localization}\r\n          state={this.state}\r\n          setData={this.setData}\r\n        />\r\n        <RaceResult localization={localization} raceResults={raceResults} course={course} />\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Simulator;\r\n","import _ from 'lodash';\r\nimport React, { Component } from 'react';\r\nimport {\r\n  ReferenceDot, ComposedChart, Line, XAxis, YAxis, Tooltip, ReferenceLine, Legend, ReferenceArea, Label,\r\n} from 'recharts';\r\n\r\nimport {\r\n  CourseDataType, LocalizationData,\r\n} from '../../library/common';\r\n\r\nimport 'react-tabs/style/react-tabs.css';\r\n\r\nconst CORNER_COLOR: { [key: string]: any } = {\r\n  Default: {\r\n    stroke: '#00ff00',\r\n    strokeOpacity: 0.3,\r\n    fill: '#00ff00',\r\n    fillOpacity: 0.3,\r\n  },\r\n  1: {\r\n    stroke: '#00bb00',\r\n    strokeOpacity: 0.3,\r\n    fill: '#00bb00',\r\n    fillOpacity: 0.3,\r\n  },\r\n  2: {\r\n    stroke: '#009900',\r\n    strokeOpacity: 0.3,\r\n    fill: '#009900',\r\n    fillOpacity: 0.3,\r\n  },\r\n  3: {\r\n    stroke: '#00f660',\r\n    strokeOpacity: 0.3,\r\n    fill: '#006600',\r\n    fillOpacity: 0.3,\r\n  },\r\n  4: {\r\n    stroke: '#003300',\r\n    strokeOpacity: 0.3,\r\n    fill: '#003300',\r\n    fillOpacity: 0.3,\r\n  },\r\n};\r\n\r\nconst STRAIGHT_COLOR: {\r\n  stroke: string,\r\n  strokeOpacity: number,\r\n  fill: string,\r\n  fillOpacity: number,\r\n} = {\r\n  stroke: '#888800',\r\n  strokeOpacity: 0.3,\r\n  fill: '#888800',\r\n  fillOpacity: 0.3,\r\n};\r\n\r\ninterface IProps {\r\n  localization: LocalizationData\r\n  state: {\r\n    course?: CourseDataType,\r\n  }\r\n}\r\n\r\ninterface IState {\r\n}\r\n\r\nclass CourseChart extends Component<IProps, IState> {\r\n  private static buildData({\r\n    course,\r\n  }: {\r\n    course: CourseDataType,\r\n  }) {\r\n    const slopeDistance = course.distance / 1000;\r\n    let maxSlope = 3;\r\n    let minSlope = -3;\r\n    let lastSlopePer = 0;\r\n    let lastSlopePerDistance = 0;\r\n    const data = [];\r\n    for (const slope of course.slope_per) {\r\n      if (lastSlopePer === 0 && slope.slope_per !== 0 && lastSlopePerDistance < slope.distance - slopeDistance) {\r\n        data.push({\r\n          slopePer: 0,\r\n          distance: slope.distance - slopeDistance,\r\n        });\r\n      }\r\n      maxSlope = slope.slope_per > maxSlope ? slope.slope_per : maxSlope;\r\n      minSlope = slope.slope_per < minSlope ? slope.slope_per : minSlope;\r\n      data.push({\r\n        slopePer: slope.slope_per,\r\n        distance: slope.distance,\r\n      });\r\n      lastSlopePer = slope.slope_per;\r\n      lastSlopePerDistance = slope.distance;\r\n    }\r\n    maxSlope = Math.ceil(maxSlope);\r\n    minSlope = Math.floor(minSlope);\r\n    if (lastSlopePer !== course.distance) {\r\n      data.push({\r\n        slopePer: 0,\r\n        distance: course.distance,\r\n      });\r\n    }\r\n    return { data, maxSlope, minSlope };\r\n  }\r\n\r\n  private _referenceAreas: any[] = [];\r\n\r\n  private _referenceDots: any[] = [];\r\n\r\n  private buildCorner({\r\n    course, localization, maxSlope, minSlope,\r\n  }: {\r\n    course: CourseDataType, localization: LocalizationData, maxSlope: number, minSlope: number,\r\n  }) {\r\n    for (let i = 0; i < course.param.corner.length; i += 1) {\r\n      let index = 'Default';\r\n      if (course.param.corner_index.includes(i)) {\r\n        index = (course.param.corner_index.indexOf(i) + 1).toString();\r\n      }\r\n\r\n      if (i === 0 || course.param.corner[i - 1].end !== course.param.corner[i].start) {\r\n        this._referenceDots.push(<ReferenceDot\r\n          x={course.param.corner[i].start}\r\n          y={minSlope + (maxSlope - minSlope) / 12}\r\n          label={<Label position=\"insideTop\">{course.param.corner[i].start}</Label>}\r\n        />);\r\n      }\r\n      this._referenceDots.push(<ReferenceDot\r\n        x={course.param.corner[i].end}\r\n        y={minSlope + (maxSlope - minSlope) / 12}\r\n        label={<Label position=\"insideTop\">{course.param.corner[i].end}</Label>}\r\n      />);\r\n\r\n      this._referenceAreas.push(<ReferenceArea\r\n        x1={course.param.corner[i].start}\r\n        x2={course.param.corner[i].end}\r\n        y1={minSlope + (maxSlope - minSlope) / 12}\r\n        y2={minSlope}\r\n        stroke={CORNER_COLOR[index].stroke}\r\n        strokeOpacity={CORNER_COLOR[index].strokeOpacity}\r\n        fill={CORNER_COLOR[index].fill}\r\n        fillOpacity={CORNER_COLOR[index].fillOpacity}\r\n        label={<Label position=\"insideTop\">{localization.site[`CourseCorner${index}`]}</Label>}\r\n      />);\r\n    }\r\n  }\r\n\r\n  private buildStraight({\r\n    course, localization, maxSlope, minSlope,\r\n  }: {\r\n    course: CourseDataType, localization: LocalizationData, maxSlope: number, minSlope: number,\r\n  }) {\r\n    for (const straight of course.param.straight) {\r\n      this._referenceAreas.push(<ReferenceArea\r\n        x1={straight.start}\r\n        x2={straight.end}\r\n        y1={minSlope + (maxSlope - minSlope) / 12}\r\n        y2={minSlope}\r\n        stroke={STRAIGHT_COLOR.stroke}\r\n        strokeOpacity={STRAIGHT_COLOR.strokeOpacity}\r\n        fill={STRAIGHT_COLOR.fill}\r\n        fillOpacity={STRAIGHT_COLOR.fillOpacity}\r\n        label={<Label position=\"insideTop\">{localization.site.CourseStraight}</Label>}\r\n      />);\r\n    }\r\n  }\r\n\r\n  render() {\r\n    const { localization, state } = this.props;\r\n    const { course } = state;\r\n\r\n    if (course === undefined) {\r\n      return (<></>);\r\n    }\r\n\r\n    this._referenceAreas = [];\r\n    this._referenceDots = [];\r\n    const { data, maxSlope, minSlope } = CourseChart.buildData({ course });\r\n    this.buildCorner({\r\n      course, localization, maxSlope, minSlope,\r\n    });\r\n    this.buildStraight({\r\n      course, localization, maxSlope, minSlope,\r\n    });\r\n\r\n    const blockDistance = course.distance / 24;\r\n    return (\r\n      <ComposedChart\r\n        width={1000}\r\n        height={500}\r\n        data={data}\r\n      >\r\n        <XAxis type=\"number\" dataKey=\"distance\" />\r\n        <YAxis domain={[minSlope, maxSlope]} />\r\n        <Tooltip />\r\n        <Legend />\r\n        <Line dot={false} name={localization.site.CourseSlope} type=\"monotone\" dataKey=\"slopePer\" stroke=\"#8884d8\" />\r\n        <ReferenceLine\r\n          x={blockDistance * 4}\r\n          stroke=\"red\"\r\n          label={<Label position=\"insideTop\">{`${localization.site.CourseMiddlePhase} ${_.round(blockDistance * 4, 2)}`}</Label>}\r\n        />\r\n        <ReferenceLine\r\n          x={blockDistance * 10}\r\n          stroke=\"red\"\r\n          label={<Label position=\"insideTop\">{`${localization.site.CoursePositionKeepEnd} ${_.round(blockDistance * 10, 2)}`}</Label>}\r\n        />\r\n        <ReferenceLine\r\n          x={blockDistance * 16}\r\n          stroke=\"red\"\r\n          label={<Label position=\"insideTop\">{`${localization.site.CourseEndPhase} ${_.round(blockDistance * 16, 2)}`}</Label>}\r\n        />\r\n        { this._referenceAreas }\r\n        { this._referenceDots }\r\n      </ComposedChart>\r\n    );\r\n  }\r\n}\r\n\r\nexport default CourseChart;\r\n","/* eslint-disable react/no-unused-state */\r\nimport React, { Component } from 'react';\r\n\r\nimport {\r\n  CourseCategory, CourseDataType, GroundType, LocalizationData,\r\n} from '../../library/common';\r\nimport CourseData from '../course-data';\r\nimport CourseChart from './course-chart';\r\n\r\nimport 'react-tabs/style/react-tabs.css';\r\n\r\nimport courseJson from '../../db/course.json';\r\n\r\nconst courses = courseJson as CourseDataType[];\r\n\r\ninterface IProps {\r\n  localization: LocalizationData\r\n}\r\n\r\ninterface IState {\r\n  racecourse?: string,\r\n  ground?: GroundType,\r\n  distance?: number,\r\n  course?: CourseDataType,\r\n}\r\n\r\nclass Course extends Component<IProps, IState> {\r\n  private courseCategories: CourseCategory = {};\r\n\r\n  constructor(props: IProps) {\r\n    super(props);\r\n\r\n    this.loadCourseData();\r\n    this.state = {\r\n      racecourse: '10009',\r\n      ground: GroundType.Turf,\r\n      distance: 2200,\r\n      course: this.courseCategories['10009'][GroundType.Turf][2200],\r\n    };\r\n  }\r\n\r\n  setData = (key: string, value: any): void => {\r\n    switch (key) {\r\n      case 'racecourse':\r\n        this.setState({\r\n          racecourse: value,\r\n          ground: undefined,\r\n          distance: undefined,\r\n          course: undefined,\r\n        });\r\n        break;\r\n      case 'ground':\r\n        this.setState({\r\n          ground: value as GroundType,\r\n          distance: undefined,\r\n          course: undefined,\r\n        });\r\n        break;\r\n      case 'distance':\r\n        this.setState(\r\n          {\r\n            distance: value as number,\r\n          },\r\n          this.updateCourse,\r\n        );\r\n        break;\r\n    }\r\n  };\r\n\r\n  updateCourse = () => {\r\n    const { racecourse, ground, distance } = this.state;\r\n    let course;\r\n    if (racecourse !== undefined && ground !== undefined && distance !== undefined) {\r\n      if (ground in this.courseCategories[racecourse]) {\r\n        course = this.courseCategories[racecourse][ground][distance];\r\n      }\r\n    }\r\n    this.setState({ course });\r\n  };\r\n\r\n  loadCourseData() {\r\n    const { localization } = this.props;\r\n    for (const course of courses) {\r\n      if (!(course.race_track_id in this.courseCategories)) {\r\n        this.courseCategories[course.race_track_id] = {};\r\n      }\r\n      if (!(course.ground in this.courseCategories[course.race_track_id])) {\r\n        this.courseCategories[course.race_track_id][course.ground] = {};\r\n      }\r\n      this.courseCategories[course.race_track_id][course.ground][course.distance+\" \"+localization.course.inout[course.inout]] = course;\r\n    }\r\n  }\r\n\r\n  render() {\r\n    const { localization } = this.props;\r\n    return (\r\n      <div className=\"content\">\r\n        <CourseData\r\n          localization={localization}\r\n          courseCategories={this.courseCategories}\r\n          setData={this.setData}\r\n          state={this.state}\r\n        />\r\n        <CourseChart\r\n          localization={localization}\r\n          state={this.state}\r\n        />\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Course;\r\n","import _ from 'lodash';\r\n\r\nimport { LocalizationData, LocalizationSubData } from './library/common';\r\n\r\nclass Localization {\r\n  default: {};\r\n\r\n  localizer: {\r\n    [key: string]: () => __WebpackModuleApi.RequireContext;\r\n  };\r\n\r\n  static getLocalizationJaJp() {\r\n    return require.context('./localization/ja_jp/', true, /\\.json$/);\r\n  }\r\n\r\n  static getLocalizationEnUs() {\r\n    return require.context('./localization/en_us/', true, /\\.json$/);\r\n  }\r\n\r\n  static getLocalizationZhTw() {\r\n    return require.context('./localization/zh_tw', true, /\\.json$/);\r\n  }\r\n\r\n  constructor() {\r\n    this.default = {};\r\n    this.localizer = {\r\n      'ja-jp': Localization.getLocalizationJaJp,\r\n      'en-us': Localization.getLocalizationEnUs,\r\n      'zh-tw': Localization.getLocalizationZhTw,\r\n    };\r\n    this.default = this.getLocalization('ja-jp');\r\n  }\r\n\r\n  getLocalization(locale: string): LocalizationData {\r\n    const files = this.localizer[locale]();\r\n    const fileJson: LocalizationSubData = {};\r\n    for (const fileKey of files.keys()) {\r\n      const structure = fileKey.split('.')[1].split('/');\r\n\r\n      let target: LocalizationSubData = fileJson;\r\n      for (let i = 1; i < structure.length; i += 1) {\r\n        if (!(structure[i] in fileJson)) {\r\n          target[structure[i]] = {};\r\n        }\r\n        target = target[structure[i]] as LocalizationSubData;\r\n      }\r\n      _.merge(target, files(fileKey));\r\n    }\r\n    return _.merge({}, this.default, fileJson) as LocalizationData;\r\n  }\r\n}\r\n\r\nexport default Localization;\r\n","import {\r\n  Layout, Menu, Select, Row, Col,\r\n} from 'antd';\r\nimport React, { Component } from 'react';\r\nimport {\r\n  Redirect, HashRouter as Router, Route, Link, Switch,\r\n} from 'react-router-dom';\r\n\r\nimport { LocalizationData } from './library/common';\r\nimport RelationGraph from './component/relation/graph';\r\nimport RelationQuery from './component/relation/query';\r\nimport ReverseQuery from './component/relation/queryP';\r\nimport Simulator from './component/simulator/simulator';\r\nimport Course from './component/course/course';\r\nimport Localization from './localization';\r\n\r\nimport 'antd/dist/antd.css';\r\nimport './app.css';\r\n\r\nconst { Header, Content, Footer } = Layout;\r\nconst { Option } = Select;\r\n\r\ninterface IProps {\r\n}\r\n\r\ninterface IState {\r\n  localization: LocalizationData,\r\n}\r\n\r\nclass App extends Component<IProps, IState> {\r\n  localization: Localization;\r\n\r\n  constructor(props: {}) {\r\n    super(props);\r\n    this.localization = new Localization();\r\n    this.state = {\r\n      localization: this.localization.getLocalization('ja-jp'),\r\n    };\r\n  }\r\n\r\n  changeLocalization = (locale: string) => {\r\n    this.setState({\r\n      localization: this.localization.getLocalization(locale),\r\n    });\r\n  };\r\n\r\n  render() {\r\n    const { localization } = this.state;\r\n\r\n    return (\r\n      <Router>\r\n        <Layout className=\"layout\">\r\n          <Header className=\"header\">\r\n            <Menu theme=\"dark\" mode=\"horizontal\" defaultSelectedKeys={['1']}>\r\n              <Menu.Item key=\"1\">\r\n                <Link to=\"/relation/graph\" className=\"link\">{localization.site['Relation Graph']}</Link>\r\n              </Menu.Item>\r\n              <Menu.Item key=\"2\">\r\n                <Link to=\"/relation/query\" className=\"link\">{localization.site['Relation Query']}</Link>\r\n              </Menu.Item>\r\n              <Menu.Item key=\"3\">\r\n                <Link to=\"/relation/queryP\" className=\"link\">Rerverse{localization.site['Relation Query']}</Link>\r\n              </Menu.Item>\r\n              <Menu.Item key=\"4\">\r\n                <Link to=\"/course\" className=\"link\">{localization.site.Course}</Link>\r\n              </Menu.Item>\r\n              <Menu.Item key=\"5\">\r\n                <Link to=\"/simulator\" className=\"link\">{localization.site.Simulator}</Link>\r\n              </Menu.Item>\r\n            </Menu>\r\n          </Header>\r\n          <Content className=\"tabs\">\r\n            <Switch>\r\n              <Route exact path=\"/\">\r\n                <Redirect to=\"/relation/graph\" />\r\n              </Route>\r\n              <Route path=\"/relation/graph\" render={() => (<RelationGraph localization={localization} />)} />\r\n              <Route path=\"/relation/query\" render={() => (<RelationQuery localization={localization} />)} />\r\n              <Route path=\"/relation/queryP\" render={() => (<ReverseQuery localization={localization} />)} />\r\n              <Route path=\"/simulator\" render={() => (<Simulator localization={localization} />)} />\r\n              <Route path=\"/course\" render={() => (<Course localization={localization} />)} />\r\n            </Switch>\r\n          </Content>\r\n          <Footer className=\"footer\" style={{ padding: '5px' }}>\r\n            <Row gutter={[8, 8]}>\r\n              <Col span={20} />\r\n              <Col span={2}>\r\n                <a className=\"github\" href=\"https://github.com/hahasula/umamusume\" target=\"_blank\" rel=\"noreferrer\">\r\n                  <img src={`${process.env.PUBLIC_URL}/static/image/github.png`} height=\"30\" alt=\"GitHub\" />\r\n                  GitHub\r\n                </a>\r\n              </Col>\r\n              <Col span={2}>\r\n                <Select className=\"localizationSelector\" defaultValue=\"ja-jp\" onChange={this.changeLocalization}>\r\n                  <Option value=\"zh-tw\">繁體中文</Option>\r\n                  <Option value=\"ja-jp\">日本語</Option>\r\n                  <Option value=\"en-us\">English</Option>\r\n                </Select>\r\n              </Col>\r\n            </Row>\r\n          </Footer>\r\n        </Layout>\r\n      </Router>\r\n    );\r\n  }\r\n}\r\n\r\nexport default App;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\n\r\nimport App from './app';\r\n\r\nimport './index.css';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root'),\r\n);\r\n"],"sourceRoot":""}